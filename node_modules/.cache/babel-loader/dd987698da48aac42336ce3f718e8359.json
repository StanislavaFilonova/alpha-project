{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/alpha-project/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport { api } from \"../utils/Api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\"; //---------------------------------------------------------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, setIsDeleteCardPopup] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: \"\",\n    name: \"\"\n  });\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState(\"Создать\");\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState(\"Да\"); //---------------------------------------------------------------------------------------------------------------------\n  //Создание обработчика события, который изменяет внутренне состояние\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardDeleteClick(card) {\n    setIsDeleteCardPopup(true);\n    setCardDelete(card);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } //Функция закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopup(false);\n    setCardDelete({\n      link: \"\",\n      name: \"\"\n    });\n    setSelectedCard({\n      link: \"\",\n      name: \"\"\n    });\n  } //---------------------------------------------------------------------------------------------------------------------\n  // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n  // Функция, которая отвечает за закрытие попапов по клику вне формы\n\n\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains(\"popup\")) {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleOverlayClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOverlayClick);\n    };\n  }, // колбэк-очистка\n  []); // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener(\"keyup\", handleEscapeClick);\n    return () => {\n      document.removeEventListener(\"keyup\", handleEscapeClick);\n    };\n  }, []); // Чтение данных с сервера (информация о пользователе)\n\n  React.useEffect(() => {\n    api.getUserInfo().then(user => {\n      //console.log(user);\n      setCurrentUser(user);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    // После получения идентификатора пользователя получим карточки\n    api._getCards() // После получения карточек - нарисуем их\n    .then(cards => {\n      //console.log(cards);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //---------------------------------------------------------------------------------------------------------------------\n  // Установка лайка карточкам\n\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some((like, currentUser) => like._id === currentUser.id); // @ts-ignore: Object is possibly 'undefined'.\n\n    api.changeLike(card.id, !isLiked).then(res => {\n      setCards(condition => condition.map(currentCard => currentCard.id === card.id ? res : currentCard));\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n\n\n  function handleCardDelete(card) {\n    setRemovePopupButtonText(\"Удаление...\"); // Исключаем из массива удаленную карточку\n    // @ts-ignore: Object is possibly 'undefined'.\n\n    api.deleteCard(card.id).then(() => {\n      const newCards = cards.filter(currentCard => currentCard.id !== card.id); // Обновляем состояние\n\n      setCards(newCards);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setRemovePopupButtonText(\"Да\");\n    });\n  } //Функция добавления места\n\n\n  function handleAddPlaceSubmit(cardNew) {\n    setPlacePopupButtonText(\"Добавление...\"); // @ts-ignore: Object is possibly 'undefined'.\n\n    api.addCard(cardNew).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setPlacePopupButtonText(\"Создать\");\n    });\n  } //---------------------------------------------------------------------------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDeleteClick,\n        onAddPlace: handleAddPlaceClick,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        buttonSubmitText: placePopupButtonText,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeleteCardPopup,\n        onClose: closeAllPopups,\n        onSubmitDeleteCard: handleCardDelete,\n        card: cardDelete,\n        buttonSubmitText: removePopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"/f/GN9QgcxvtZdbYUJchXGnZ2RU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/alpha-project/src/components/App.tsx"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","AddPlacePopup","DeleteCardPopup","App","isAddPlacePopupOpen","setIsAddPlacePopupOpen","useState","isDeleteCardPopup","setIsDeleteCardPopup","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","cards","setCards","cardDelete","setCardDelete","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","handleCardClick","card","handleCardDeleteClick","handleAddPlaceClick","closeAllPopups","useEffect","handleOverlayClick","evt","target","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","getUserInfo","then","user","catch","err","console","log","_getCards","handleCardLike","isLiked","likes","some","like","_id","id","changeLike","res","condition","map","currentCard","handleCardDelete","deleteCard","newCards","filter","finally","handleAddPlaceSubmit","cardNew","addCard"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport {api} from \"../utils/Api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\n\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction App() {\n    //Создаем хуки, управляющие внутренним состоянием.\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isDeleteCardPopup, setIsDeleteCardPopup] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({\n        link: \"\",\n        name: \"\",\n    });\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    const [cards, setCards] = React.useState([] as any);\n    const [cardDelete, setCardDelete] = React.useState({});\n\n    const [placePopupButtonText, setPlacePopupButtonText] = React.useState(\"Создать\");\n    const [removePopupButtonText, setRemovePopupButtonText] =\n        React.useState(\"Да\");\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    //Создание обработчика события, который изменяет внутренне состояние\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleCardDeleteClick(card) {\n        setIsDeleteCardPopup(true);\n        setCardDelete(card);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    //Функция закрытия всех попапов\n    function closeAllPopups() {\n        setIsAddPlacePopupOpen(false);\n        setIsDeleteCardPopup(false);\n        setCardDelete({ link: \"\", name: \"\" });\n        setSelectedCard({ link: \"\", name: \"\" });\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n    // Функция, которая отвечает за закрытие попапов по клику вне формы\n    React.useEffect(\n        () => {\n            function handleOverlayClick(evt) {\n                if (evt.target.classList.contains(\"popup\")) {\n                    closeAllPopups();\n                }\n            }\n            document.addEventListener(\"mousedown\", handleOverlayClick);\n\n            return () => {\n                document.removeEventListener(\"mousedown\", handleOverlayClick);\n            };\n        },\n        // колбэк-очистка\n        []\n    );\n\n    // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n    React.useEffect(() => {\n        function handleEscapeClick(evt) {\n            if (evt.key === \"Escape\") {\n                closeAllPopups();\n            }\n        }\n        document.addEventListener(\"keyup\", handleEscapeClick);\n\n        return () => {\n            document.removeEventListener(\"keyup\", handleEscapeClick);\n        };\n    }, []);\n\n    // Чтение данных с сервера (информация о пользователе)\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((user) => {\n                //console.log(user);\n                setCurrentUser(user);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    React.useEffect(() => {\n        // После получения идентификатора пользователя получим карточки\n        api._getCards()\n            // После получения карточек - нарисуем их\n            .then((cards) => {\n                //console.log(cards);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    //---------------------------------------------------------------------------------------------------------------------\n    // Установка лайка карточкам\n    function handleCardLike(card) {\n        // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n        const isLiked = card.likes.some((like: any, currentUser: any) => like._id === currentUser.id);\n        // @ts-ignore: Object is possibly 'undefined'.\n        api.changeLike(card.id, !isLiked)\n            .then((res: any) => {\n                setCards((condition: any) =>\n                    condition.map((currentCard: any) =>\n                        currentCard.id === card.id ? res : currentCard\n                    )\n                );\n            })\n            .catch((err: any) => {\n                console.log(err);\n            })\n    }\n\n    //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n    function handleCardDelete(card: any) {\n        setRemovePopupButtonText(\"Удаление...\");\n        // Исключаем из массива удаленную карточку\n        // @ts-ignore: Object is possibly 'undefined'.\n        api.deleteCard(card.id)\n            .then(() => {\n                const newCards = cards.filter(\n                    (currentCard: any) => currentCard.id !== card.id\n                );\n                // Обновляем состояние\n                setCards(newCards);\n                closeAllPopups();\n            })\n            .catch((err: any) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setRemovePopupButtonText(\"Да\");\n            })\n    }\n\n    //Функция добавления места\n    function handleAddPlaceSubmit(cardNew) {\n        setPlacePopupButtonText(\"Добавление...\");\n        // @ts-ignore: Object is possibly 'undefined'.\n        api.addCard(cardNew)\n            .then((res: never) => {\n                setCards([res, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err: any) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setPlacePopupButtonText(\"Создать\");\n            })\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                {\" \"}\n                {/*текущее значение контекста из ближайшего подходящего Provider выше в дереве компонентов.*/}\n                <Header />\n                <Main\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDeleteClick}\n                    onAddPlace={handleAddPlaceClick}\n                    cards={cards}\n                />\n                <Footer />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    buttonSubmitText={placePopupButtonText}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <DeleteCardPopup\n                    isOpen={isDeleteCardPopup}\n                    onClose={closeAllPopups}\n                    onSubmitDeleteCard={handleCardDelete}\n                    card={cardDelete}\n                    buttonSubmitText={removePopupButtonText}\n                />\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}