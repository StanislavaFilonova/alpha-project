{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/alpha-project/src/components/EditProfilePopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext'; //---------------------------------------------------------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  ;\n\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  ;\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault(evt);\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  ; //---------------------------------------------------------------------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"profile\",\n    buttonSubmitText: props.buttonSubmitText,\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name-input\",\n      type: \"text\",\n      className: \"popup__input popup__input_type_name\",\n      name: \"name\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      value: name || '',\n      onChange: handleChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"name-input-error\",\n      className: \"popup__input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"occupation-input\",\n      type: \"text\",\n      className: \"popup__input popup__input_type_occupation\",\n      name: \"occupation\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      value: description || '',\n      onChange: handleChangeDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"occupation-input-error\",\n      className: \"popup__input-error popup__input-error_active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"LE+ydgOzO9YHh5eDOcWvvZhDEH4=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/alpha-project/src/components/EditProfilePopup.tsx"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","handleChangeName","evt","target","value","handleChangeDescription","useEffect","about","isOpen","handleSubmit","preventDefault","onUpdateUser","buttonSubmitText","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction EditProfilePopup(props){\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription ] = React.useState('');\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    };\n\n    function handleChangeDescription(evt) {\n        setDescription(evt.target.value);\n    };\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser, props.isOpen]);\n\n    function handleSubmit(evt) {\n        evt.preventDefault(evt);\n\n        props.onUpdateUser({\n            name: name,\n            about: description\n        });\n    };\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    return(\n        <PopupWithForm \n            name=\"profile\"\n            title=\"Редактировать профиль\"\n            button=\"profile\"\n            buttonSubmitText={props.buttonSubmitText}\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input\n                id=\"name-input\"\n                type=\"text\"\n                className=\"popup__input popup__input_type_name\"\n                name=\"name\"\n                placeholder=\"Ваше имя\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                value={name|| ''}\n                onChange={handleChangeName}\n            />\n            <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n            <input\n                id=\"occupation-input\"\n                type=\"text\"\n                className=\"popup__input popup__input_type_occupation\"\n                name=\"occupation\"\n                placeholder=\"Ваша профессия\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                value={description || ''}\n                onChange={handleChangeDescription}\n            />\n            <span id=\"occupation-input-error\" className=\"popup__input-error popup__input-error_active\"></span>\n        </PopupWithForm>\n    )\n        \n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}