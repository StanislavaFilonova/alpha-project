{"ast":null,"code":"export class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = void 0;\n    this._headers = void 0;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  } // Возврат ответа об ошибке от сервера\n\n\n  _checkResponse(res) {\n    if (res.ok) {\n      // Метод .json принимает предоставленный JSON, строит его и отправляет его клиенту\n      return res.json();\n    } // Promise  позволяет создать обертку для значения, который еще не известен при создании промиса. Нужен дял асинхронных операций\n\n\n    return Promise.reject(`Ошибка: ${res.statusText}, с кодом: ${res.status}`);\n  }\n  /**\n   * Метод получения информации о пользователе с сервера \n   */\n\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/stanislavafilonova`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  /**\n   * Метод получения карточек с сервера \n   */\n\n\n  _getCards() {\n    return fetch(`${this._baseUrl}/photos`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  /**\n   * Метод загрузки новой карточки на сервер\n   * @param {Object} cardData Данные о карточке\n   * cardData.name {String}\n   * cardData.link {String}\n   */\n\n\n  addCard(cardData) {\n    if (!cardData.name) {\n      console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'name'. Запрос не будет выполнен.\");\n      return;\n    }\n\n    if (!cardData.link) {\n      console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'link'. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/collections/DHvWeKumP80/add`;\n    const hdr = this._headers; //@ts-ignore: Object is possibly 'undefined'.\n\n    hdr['Content-Type'] = 'application/json';\n    const opts = {\n      method: 'POST',\n      headers: hdr,\n      body: JSON.stringify({\n        title: \"Stasya Collection\",\n        description: \"Stasya First Collection\",\n        private: false\n      })\n    };\n    return fetch(url, opts).then(this._checkResponse);\n  }\n  /**\n   * Метод удаления карточки \n   * @param {String} cardId Индентификатор карточки \n   */\n\n\n  deleteCard(cardId) {\n    if (!cardId) {\n      console.error(\"Api.deleteCard не передан обязательный аргумент cardId. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/photos/${cardId}`;\n    const hdr = this._headers; //@ts-ignore: Object is possibly 'undefined'.\n\n    hdr['Content-Type'] = 'application/json';\n    const opts = {\n      method: 'DELETE',\n      headers: hdr\n    };\n    return fetch(url, opts).then(this._checkResponse);\n  }\n  /**\n   * Метод постановки/удаления лайка на карточку\n   * @param {String} cardId Идентификатор карточки \n   */\n\n\n  changeLike(cardId, like) {\n    if (!cardId) {\n      console.error(\"Api.changeLike не передан обязательный аргумент cardId. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/photos/${cardId}`;\n    const opts = {\n      method: like ? 'GET' : 'DELETE',\n      headers: this._headers\n    };\n    return fetch(url, opts).then(this._checkResponse);\n  }\n\n}\nexport const api = new Api({\n  baseUrl: \"https://api.unsplash.com\",\n  headers: {\n    'Authorization': \"Client-ID 5_Thk5UPokkj3LlpG9NE5qt9g1NLCtgyWDtoGjECwi4\",\n    'Content-Type': 'application/json',\n    'Accept-Version': 'v1'\n  }\n}); // export const api = new Api({\n//   baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-30\",\n//   headers: {\n//     authorization: \"08bc75e7-78fb-46ea-8791-989ceb63ff7a\",\n//     'Content-Type': 'application/json'\n//   },\n// });","map":{"version":3,"sources":["/Users/Stasya/Desktop/alpha-project/src/utils/Api.tsx"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","statusText","status","getUserInfo","fetch","then","_getCards","addCard","cardData","name","console","error","link","url","hdr","opts","method","body","JSON","stringify","title","description","private","deleteCard","cardId","changeLike","like","api"],"mappings":"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","sourcesContent":["export class Api {\n\n  private _baseUrl: any;\n  private _headers: HeadersInit | undefined;\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  // Возврат ответа об ошибке от сервера\n  _checkResponse(res) {\n    if (res.ok) {\n      // Метод .json принимает предоставленный JSON, строит его и отправляет его клиенту\n      return res.json();\n    }\n    // Promise  позволяет создать обертку для значения, который еще не известен при создании промиса. Нужен дял асинхронных операций\n    return Promise.reject(`Ошибка: ${res.statusText}, с кодом: ${res.status}`);\n  }\n\n  /**\n   * Метод получения информации о пользователе с сервера \n   */\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/stanislavafilonova`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  /**\n   * Метод получения карточек с сервера \n   */\n  _getCards() {\n    return fetch(`${this._baseUrl}/photos`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  /**\n   * Метод загрузки новой карточки на сервер\n   * @param {Object} cardData Данные о карточке\n   * cardData.name {String}\n   * cardData.link {String}\n   */\n  addCard(cardData) {\n    if(!cardData.name) {\n      console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'name'. Запрос не будет выполнен.\");\n      return;\n    }\n    if(!cardData.link) {\n      console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'link'. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/collections/DHvWeKumP80/add`;\n    const hdr = this._headers;\n    //@ts-ignore: Object is possibly 'undefined'.\n    hdr['Content-Type'] = 'application/json';\n\n    const opts = {\n      method: 'POST',\n      headers: hdr,\n      body: JSON.stringify({\n        title: \"Stasya Collection\",\n        description: \"Stasya First Collection\",\n        private: false\n      })\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n  }\n\n  /**\n   * Метод удаления карточки \n   * @param {String} cardId Индентификатор карточки \n   */\n  deleteCard(cardId) {\n    if(!cardId) {\n      console.error(\"Api.deleteCard не передан обязательный аргумент cardId. Запрос не будет выполнен.\");\n      return;\n    }\n    const url = `${this._baseUrl}/photos/${cardId}`;\n    const hdr = this._headers;\n    //@ts-ignore: Object is possibly 'undefined'.\n    hdr['Content-Type'] = 'application/json';\n    const opts = {\n      method: 'DELETE',\n      headers: hdr\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n  }\n\n  /**\n   * Метод постановки/удаления лайка на карточку\n   * @param {String} cardId Идентификатор карточки \n   */\n  changeLike(cardId, like){\n    if(!cardId) {\n      console.error(\"Api.changeLike не передан обязательный аргумент cardId. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/photos/${cardId}`;\n    const opts = {\n      method: (like ? 'GET' : 'DELETE'),\n      headers: this._headers\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: \"https://api.unsplash.com\",\n  headers: {\n    'Authorization': \"Client-ID 5_Thk5UPokkj3LlpG9NE5qt9g1NLCtgyWDtoGjECwi4\",\n    'Content-Type': 'application/json',\n    'Accept-Version': 'v1'\n  },\n});\n// export const api = new Api({\n//   baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-30\",\n//   headers: {\n//     authorization: \"08bc75e7-78fb-46ea-8791-989ceb63ff7a\",\n//     'Content-Type': 'application/json'\n//   },\n// });"]},"metadata":{},"sourceType":"module"}