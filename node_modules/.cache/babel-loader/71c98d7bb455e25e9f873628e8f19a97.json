{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport Avatar from '../images/Avatar.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: '',\n    name: ''\n  });\n  const [currentUser, setCurrentUser] = React.useState({\n    _id: 0,\n    name: 'Станислава',\n    about: 'Frontend Developer',\n    avatar: Avatar\n  });\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да'); //Создание обработчика события, который изменяет внутренне состояние \n\n  function handleEditAvatarClick() {\n    onEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    onEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    onAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardDeleteClick(card) {\n    onDeleteCardPopup(true);\n    setCardDelete(card);\n  } //Функция закрытия всех попапов\n\n\n  function closeAllPopups() {\n    onEditAvatarPopupOpen(false);\n    onEditProfilePopupOpen(false);\n    onAddPlacePopupOpen(false);\n    onDeleteCardPopup(false);\n    setCardDelete({\n      link: '',\n      name: ''\n    });\n    setSelectedCard({\n      link: '',\n      name: ''\n    });\n  } // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n  // Функция, которая отвечает за закрытие попапов по клику вне формы\n\n\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains('popup')) {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('mousedown', handleOverlayClick);\n    return () => {\n      document.removeEventListener('mousedown', handleOverlayClick);\n    };\n  }, // колбэк-очистка\n  []); // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('keyup', handleEscapeClick);\n    return () => {\n      document.removeEventListener('keyup', handleEscapeClick);\n    };\n  }, []); // Чтение данных с сервера (информация о пользователе + информация о карточках)\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(_ref => {\n      let [userData, cards] = _ref;\n      setCurrentUser(userData);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Установка лайка карточкам ?????\n\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n  } //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n\n\n  function handleCardDelete(card) {\n    setRemovePopupButtonText('Удаление...');\n    api.deleteCard(card._id).then(() => {\n      // Исключаем из массива удаленную карточку\n      const newCards = cards.filter(currentCard => currentCard._id !== card._id); // Обновляем состояние \n\n      setCards(newCards);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Невозможно удалить карточку. Ошибка ${err}.`);\n    }).finally(() => {\n      setRemovePopupButtonText('Да');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDeleteClick,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups //onUpdateUser={handleUpdateUser}\n        ,\n        buttonSubmitText: profilePopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        buttonSubmitText: placePopupButtonText //onAddPlace={handleAddPlaceSubmit}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups //onUpdateAvatar={handleUpdateAvatar}\n        ,\n        buttonSubmitText: avatarPopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeleteCardPopup,\n        onClose: closeAllPopups,\n        onSubmitDeleteCard: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this), \"card=\", cardDelete, \"buttonSubmitText=\", removePopupButtonText, /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9d8WoMcEO+6YXktcFBDRmRNt0OI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","EditProfilePopup","Avatar","App","isEditAvatarPopupOpen","onEditAvatarPopupOpen","useState","isEditProfilePopupOpen","onEditProfilePopupOpen","isAddPlacePopupOpen","onAddPlacePopupOpen","isDeleteCardPopup","onDeleteCardPopup","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","_id","about","avatar","cards","setCards","cardDelete","setCardDelete","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleCardDeleteClick","closeAllPopups","useEffect","handleOverlayClick","evt","target","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","Promise","all","getUserInfo","getCards","then","userData","catch","err","console","log","handleCardLike","isLiked","likes","some","like","handleCardDelete","deleteCard","newCards","filter","currentCard","finally"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js'\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport Avatar from '../images/Avatar.png'\n\n\nfunction App() {\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({link: '', name: ''});\n  const [currentUser, setCurrentUser] = React.useState({\n    _id: 0, \n    name: 'Станислава',\n    about: 'Frontend Developer',\n    avatar: Avatar,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да');\n\n\n  //Создание обработчика события, который изменяет внутренне состояние \n  function handleEditAvatarClick() {\n    onEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    onEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    onAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardDeleteClick(card) {\n    onDeleteCardPopup(true);\n    setCardDelete(card);\n  }\n\n  //Функция закрытия всех попапов\n  function closeAllPopups() {\n    onEditAvatarPopupOpen(false);\n    onEditProfilePopupOpen(false);\n    onAddPlacePopupOpen(false);\n    onDeleteCardPopup(false);\n    setCardDelete({link: '',  name: ''});\n    setSelectedCard({link: '',  name: ''});\n  }\n\n\n// Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n// Функция, которая отвечает за закрытие попапов по клику вне формы\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains('popup')) {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('mousedown', handleOverlayClick);\n\n    return() => {\n      document.removeEventListener('mousedown', handleOverlayClick);\n    }\n  }, \n  // колбэк-очистка\n  []);\n\n  // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keyup', handleEscapeClick);\n\n    return() => {\n      document.removeEventListener('keyup', handleEscapeClick);\n    }\n  }, [])\n\n\n  // Чтение данных с сервера (информация о пользователе + информация о карточках)\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()])\n      .then(([userData, cards]) => {\n        setCurrentUser(userData);\n        setCards(cards)\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n\n  }, [])\n\n\n  // Установка лайка карточкам ?????\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n  }\n\n  //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n  function handleCardDelete(card) {\n    setRemovePopupButtonText('Удаление...')\n    api.deleteCard(card._id)\n      .then(() => {\n        // Исключаем из массива удаленную карточку\n        const newCards = cards.filter((currentCard) => (currentCard._id !== card._id\n        ));\n        // Обновляем состояние \n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Невозможно удалить карточку. Ошибка ${err}.`);\n      })\n      .finally(() => {\n        setRemovePopupButtonText('Да');\n      }\n      )\n  }\n  return (\n    <div className=\"page\">\n    <CurrentUserContext.Provider value={currentUser}> {/*текущее значение контекста из ближайшего подходящего Provider выше в дереве компонентов.*/}\n\n    <Header/>\n\n    <Main\n      onEditAvatar={handleEditAvatarClick}\n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onCardClick={handleCardClick}\n      onCardLike={handleCardLike}\n      onCardDelete={handleCardDeleteClick}\n      cards={cards}\n    />\n\n    <Footer/>\n\n    <EditProfilePopup\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      //onUpdateUser={handleUpdateUser}\n      buttonSubmitText={profilePopupButtonText}\n    />\n    \n    <AddPlacePopup\n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      buttonSubmitText={placePopupButtonText}\n      //onAddPlace={handleAddPlaceSubmit}\n      />\n\n    <EditAvatarPopup\n      isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}\n      //onUpdateAvatar={handleUpdateAvatar}\n      buttonSubmitText={avatarPopupButtonText}\n      />\n\n    <DeleteCardPopup \n      isOpen={isDeleteCardPopup}\n      onClose={closeAllPopups}\n      onSubmitDeleteCard={handleCardDelete}/>\n      card={cardDelete}\n      buttonSubmitText={removePopupButtonText}\n    <ImagePopup\n      card={selectedCard}\n      onClose={closeAllPopups}/>\n      </CurrentUserContext.Provider>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}