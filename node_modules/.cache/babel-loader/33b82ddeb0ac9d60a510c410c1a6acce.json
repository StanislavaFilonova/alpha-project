{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/dev/mesto-react/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupInputClass } from '../utils/constants'; //---------------------------------------------------------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  const [cardTitle, setCardTitle] = React.useState({\n    title: {\n      value: '',\n      isValid: true\n    }\n  });\n  const [cardLink, setCardLink] = React.useState({\n    link: {\n      value: '',\n      isValid: true\n    }\n  });\n  const [errorClasses, setErrorClasses] = React.useState({\n    title: {\n      input: '',\n      error: ''\n    },\n    link: {\n      input: '',\n      error: ''\n    }\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    title: '',\n    link: ''\n  });\n\n  function handleChangeCardTitle(evt) {\n    const {\n      name,\n      value,\n      validity\n    } = evt.target;\n    setCardTitle({ ...cardTitle,\n      [name]: {\n        value: value,\n        isValid: validity.valid\n      }\n    });\n  }\n\n  function handleChangeCardLink(evt) {\n    const {\n      name,\n      value,\n      validity\n    } = evt.target;\n    setCardLink({ ...cardLink,\n      [name]: {\n        value: value,\n        isValid: validity.valid\n      }\n    });\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onAddPlace({\n      title: cardTitle.name.value,\n      link: cardLink.link.value\n    });\n  }\n\n  function handleInput(evt) {\n    const {\n      name,\n      value,\n      validity,\n      validationMessage\n    } = evt.target;\n    setCardTitle({ ...cardTitle,\n      [name]: {\n        value: value,\n        isValid: validity.valid\n      }\n    });\n    setCardLink({ ...cardLink,\n      [name]: {\n        value: value,\n        isValid: validity.valid\n      }\n    });\n    setErrorMessages({ ...errorMessages,\n      [name]: validationMessage\n    });\n    setErrorClasses({ ...errorClasses,\n      [name]: {\n        input: !validity.valid ? popupInputClass.inputError : '',\n        error: !validity.valid ? popupInputClass.error : ''\n      }\n    });\n  }\n\n  ; //---------------------------------------------------------------------------------------------------------------------\n  // Используем хук эффект, ктр. вызывает функцию\n\n  React.useEffect(() => {\n    setCardTitle({\n      title: {\n        value: '',\n        isValid: false\n      }\n    });\n    setCardLink({\n      link: {\n        value: '',\n        isValid: false\n      }\n    });\n    setErrorClasses({\n      title: {\n        input: '',\n        error: ''\n      },\n      link: {\n        input: '',\n        error: ''\n      }\n    });\n  }, [props.isOpen]); //---------------------------------------------------------------------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    button: \"card\",\n    buttonSubmitText: props.buttonSubmitText,\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    submitDisabled: !cardTitle.title.isValid || !cardLink.link.isValid,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: `popup__input popup__input_type_placename ${errorClasses.title.input}`,\n      id: \"placename-input\",\n      name: \"name\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"30\",\n      autoComplete: \"off\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      value: cardTitle.title.value,\n      onChange: handleChangeCardTitle,\n      onInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"placename-input-error\",\n      className: `popup__input-error popup__input-error_active ${errorClasses.title.error}`,\n      children: errorMessages.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: `popup__input popup__input_type_imagelink ${errorClasses.link.input}`,\n      id: \"imageLink-input\",\n      name: \"link\",\n      pattern: \"https?://.+\",\n      required: true,\n      autoComplete: \"off\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      value: cardLink.link.value,\n      onChange: handleChangeCardLink,\n      onInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"imageLink-input-error\",\n      className: `popup__input-error popup__input-error_active ${errorClasses.link.error}`,\n      children: errorMessages.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddPlacePopup, \"CpAx/MpqPLnFUmr7FYdm0SdAwyQ=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup; // function AddPlacePopup(props) {\n//     const [inputs, setInputs] = React.useState({ \n//       title: { value: '', isValid: true, },\n//       link: { value: '', isValid: true, },\n//     });\n//     const [errorClasses, setErrorClasses] = React.useState({\n//       title: { input: '', error: '', }, \n//       link: {  input: '', error: '', },\n//     });\n//     const [errorMessages, setErrorMessages] = React.useState({title: '', link: ''});\n//     React.useEffect(() => {\n//       setInputs({ \n//         title: { value: '', isValid: false, },\n//         link: { value: '', isValid: false, },\n//       });\n//       setErrorClasses({\n//         title: { input: '', error: '', }, \n//         link: { input: '', error: '', },\n//       });\n//     }, [props.isOpen]);\n//     const handleSubmit = (e) => {\n//       e.preventDefault();\n//       props.onAddPlace({title: inputs.name.value, link: inputs.link.value});\n//     };\n//     const handleChange = (e) => {\n//       const {name, value, validity} = e.target;\n//       setInputs({...inputs, [name]: { value: value, isValid: validity.valid, }});\n//     };\n//     const handleInput = (e) => {\n//       const {name, value, validity, validationMessage} = e.target;\n//       setInputs({...inputs, [name]: { value: value, isValid: validity.valid, }});\n//       setErrorMessages({...errorMessages, [name]: validationMessage});\n//       setErrorClasses({...errorClasses,\n//         [name]: { \n//           input: !validity.valid ? popupInputClass.inputError : '', \n//           error: !validity.valid ? popupInputClass.error : '', \n//         }, \n//       });\n//     };\n//     return (\n//       <PopupWithForm \n//         name=\"card\"\n//         title=\"Новое место\" \n//         button=\"card\"\n//         buttonSubmitText={props.buttonSubmitText}\n//         submitDisabled={!inputs.title.isValid || !inputs.link.isValid}\n//         isOpen={props.isOpen} \n//         onClose={props.onClose}\n//         onSubmit={handleSubmit}         \n//       >\n//         <input type=\"text\"\n//             id=\"placename-input\" name=\"name\" \n//             maxLength=\"30\" minLength=\"2\" \n//             className={`popup__input popup__input_type_placename ${errorClasses.title.input}`} \n//             placeholder=\"Название\" \n//             autoComplete=\"off\"\n//             required\n//             value={inputs.title.value}\n//             onChange={handleChange}\n//             onInput={handleInput}\n//         />\n//           <span \n//             className={`popup__input-error popup__input-error_active ${errorClasses.title.error}`} \n//             id=\"placename-input-error\"\n//           >\n//             {errorMessages.name}\n//           </span>\n//           <input type=\"url\"\n//             id=\"imageLink-input\" name=\"link\" \n//             pattern=\"https?://.+\" \n//             className={`popup__input popup__input_type_imagelink ${errorClasses.link.input}`} \n//             placeholder=\"Ссылка на картинку\" \n//             required\n//             autoComplete=\"off\"\n//             value={inputs.link.value}\n//             onChange={handleChange}\n//             onInput={handleInput}\n//           />\n//           <span \n//             className={`popup__input-error popup__input-error_active ${errorClasses.link.error}`} \n//             id=\"imageLink-input-error\"\n//           >\n//             {errorMessages.link}\n//           </span>\n//       </PopupWithForm>\n//     );\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/mesto-react/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","popupInputClass","AddPlacePopup","props","cardTitle","setCardTitle","useState","title","value","isValid","cardLink","setCardLink","link","errorClasses","setErrorClasses","input","error","errorMessages","setErrorMessages","handleChangeCardTitle","evt","name","validity","target","valid","handleChangeCardLink","handleSubmit","preventDefault","onAddPlace","handleInput","validationMessage","inputError","useEffect","isOpen","buttonSubmitText","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {popupInputClass} from '../utils/constants';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction AddPlacePopup(props) {\n    const [cardTitle, setCardTitle] = React.useState({title: { value: '', isValid: true, }});\n    const [cardLink, setCardLink] = React.useState({link: { value: '', isValid: true, }});\n\n    const [errorClasses, setErrorClasses] = React.useState({\n        title: { input: '', error: '', }, \n        link: {  input: '', error: '', },\n    });\n\n    const [errorMessages, setErrorMessages] = React.useState({title: '', link: ''});\n\n    function handleChangeCardTitle(evt) {\n        const {name, value, validity} = evt.target;\n        setCardTitle({...cardTitle, [name]: { value: value, isValid: validity.valid, }});\n    }\n\n    function handleChangeCardLink(evt) {\n        const {name, value, validity} = evt.target;\n        setCardLink({...cardLink, [name]: { value: value, isValid: validity.valid, }});\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        props.onAddPlace ({\n            title: cardTitle.name.value, \n            link: cardLink.link.value\n        });\n    }\n\n    function handleInput(evt) {\n      const {name, value, validity, validationMessage} = evt.target;\n      setCardTitle({...cardTitle, [name]: { value: value, isValid: validity.valid, }});\n      setCardLink({...cardLink, [name]: { value: value, isValid: validity.valid, }});\n      setErrorMessages({...errorMessages, [name]: validationMessage});\n      setErrorClasses({...errorClasses,\n        [name]: { \n          input: !validity.valid ? popupInputClass.inputError : '', \n          error: !validity.valid ? popupInputClass.error : '', \n        }, \n      });\n    };\n    //---------------------------------------------------------------------------------------------------------------------\n\n    // Используем хук эффект, ктр. вызывает функцию\n    React.useEffect(() => {\n        setCardTitle({title: { value: '', isValid: false, }});\n        setCardLink({link: { value: '', isValid: false, }});\n        setErrorClasses({\n        title: { input: '', error: '', }, \n        link: { input: '', error: '', },\n        });\n    }, [props.isOpen]);\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    return(\n        <PopupWithForm\n            name=\"card\"\n            title=\"Новое место\"\n            button=\"card\"\n            buttonSubmitText={props.buttonSubmitText}\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n            submitDisabled={!cardTitle.title.isValid || !cardLink.link.isValid}\n        >\n            <input \n                type=\"text\" \n                className={`popup__input popup__input_type_placename ${errorClasses.title.input}`} \n                id=\"placename-input\"\n                name=\"name\" \n                required\n                minLength=\"2\"\n                maxLength=\"30\"\n                autoComplete=\"off\"\n                placeholder=\"Название\"\n                value={cardTitle.title.value}\n                onChange={handleChangeCardTitle}\n                onInput={handleInput}\n            />\n            <span id=\"placename-input-error\" className={`popup__input-error popup__input-error_active ${errorClasses.title.error}`}>{errorMessages.name}</span>\n            <input \n                type=\"url\" \n                className={`popup__input popup__input_type_imagelink ${errorClasses.link.input}`}\n                id=\"imageLink-input\"\n                name=\"link\" \n                pattern=\"https?://.+\" \n                required\n                autoComplete=\"off\"\n                placeholder=\"Ссылка на картинку\"\n                value={cardLink.link.value}\n                onChange={handleChangeCardLink}\n                onInput={handleInput}\n            />\n            <span id=\"imageLink-input-error\" className={`popup__input-error popup__input-error_active ${errorClasses.link.error}`}>{errorMessages.link}</span> \n            </PopupWithForm>\n    );\n\n}\n\nexport default AddPlacePopup;\n\n// function AddPlacePopup(props) {\n//     const [inputs, setInputs] = React.useState({ \n//       title: { value: '', isValid: true, },\n//       link: { value: '', isValid: true, },\n//     });\n  \n//     const [errorClasses, setErrorClasses] = React.useState({\n//       title: { input: '', error: '', }, \n//       link: {  input: '', error: '', },\n//     });\n  \n//     const [errorMessages, setErrorMessages] = React.useState({title: '', link: ''});\n  \n//     React.useEffect(() => {\n//       setInputs({ \n//         title: { value: '', isValid: false, },\n//         link: { value: '', isValid: false, },\n//       });\n//       setErrorClasses({\n//         title: { input: '', error: '', }, \n//         link: { input: '', error: '', },\n//       });\n//     }, [props.isOpen]);\n  \n//     const handleSubmit = (e) => {\n//       e.preventDefault();\n//       props.onAddPlace({title: inputs.name.value, link: inputs.link.value});\n//     };\n  \n//     const handleChange = (e) => {\n//       const {name, value, validity} = e.target;\n//       setInputs({...inputs, [name]: { value: value, isValid: validity.valid, }});\n//     };\n  \n//     const handleInput = (e) => {\n//       const {name, value, validity, validationMessage} = e.target;\n//       setInputs({...inputs, [name]: { value: value, isValid: validity.valid, }});\n//       setErrorMessages({...errorMessages, [name]: validationMessage});\n//       setErrorClasses({...errorClasses,\n//         [name]: { \n//           input: !validity.valid ? popupInputClass.inputError : '', \n//           error: !validity.valid ? popupInputClass.error : '', \n//         }, \n//       });\n//     };\n  \n//     return (\n//       <PopupWithForm \n//         name=\"card\"\n//         title=\"Новое место\" \n//         button=\"card\"\n//         buttonSubmitText={props.buttonSubmitText}\n//         submitDisabled={!inputs.title.isValid || !inputs.link.isValid}\n//         isOpen={props.isOpen} \n//         onClose={props.onClose}\n//         onSubmit={handleSubmit}         \n//       >\n//         <input type=\"text\"\n//             id=\"placename-input\" name=\"name\" \n//             maxLength=\"30\" minLength=\"2\" \n//             className={`popup__input popup__input_type_placename ${errorClasses.title.input}`} \n//             placeholder=\"Название\" \n//             autoComplete=\"off\"\n//             required\n//             value={inputs.title.value}\n//             onChange={handleChange}\n//             onInput={handleInput}\n//         />\n//           <span \n//             className={`popup__input-error popup__input-error_active ${errorClasses.title.error}`} \n//             id=\"placename-input-error\"\n//           >\n//             {errorMessages.name}\n//           </span>\n  \n//           <input type=\"url\"\n//             id=\"imageLink-input\" name=\"link\" \n//             pattern=\"https?://.+\" \n//             className={`popup__input popup__input_type_imagelink ${errorClasses.link.input}`} \n//             placeholder=\"Ссылка на картинку\" \n//             required\n//             autoComplete=\"off\"\n//             value={inputs.link.value}\n//             onChange={handleChange}\n//             onInput={handleInput}\n//           />\n\n//           <span \n//             className={`popup__input-error popup__input-error_active ${errorClasses.link.error}`} \n//             id=\"imageLink-input-error\"\n//           >\n//             {errorMessages.link}\n//           </span>\n//       </PopupWithForm>\n//     );\n//   }\n"]},"metadata":{},"sourceType":"module"}