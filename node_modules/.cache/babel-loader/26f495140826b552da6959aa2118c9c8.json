{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport { popupInputClass } from '../utils/constants'; //---------------------------------------------------------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [inputs, setInputs] = React.useState({\n    name: {\n      value: currentUser.name,\n      isValid: true\n    },\n    info: {\n      value: currentUser.about,\n      isValid: true\n    }\n  });\n  const [errorClasses, setErrorClasses] = React.useState({\n    name: {\n      input: '',\n      error: ''\n    },\n    info: {\n      input: '',\n      error: ''\n    }\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    name: '',\n    info: ''\n  });\n  React.useEffect(() => {\n    if (props.isOpen) {\n      setInputs({\n        name: {\n          value: currentUser.name,\n          isValid: true\n        },\n        info: {\n          value: currentUser.about,\n          isValid: true\n        }\n      });\n    } else {\n      setInputs({\n        name: {\n          value: '',\n          isValid: false\n        },\n        info: {\n          value: '',\n          isValid: false\n        }\n      });\n    }\n\n    setErrorClasses({\n      name: {\n        input: '',\n        error: ''\n      },\n      info: {\n        input: '',\n        error: ''\n      }\n    });\n  }, [currentUser, props.isOpen]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      validity\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: {\n        value: value,\n        isValid: validity.valid\n      }\n    });\n  };\n\n  const handleInput = e => {\n    const {\n      name,\n      value,\n      validity,\n      validationMessage\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: {\n        value: value,\n        isValid: validity.valid\n      }\n    });\n    setErrorMessages({ ...errorMessages,\n      [name]: validationMessage\n    });\n    setErrorClasses({ ...errorClasses,\n      [name]: {\n        input: !validity.valid ? popupInputClass.inputError : '',\n        error: !validity.valid ? popupInputClass.error : ''\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onUpdateUser({\n      name: inputs.name.value,\n      info: inputs.info.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"profile\",\n    submitName: props.submitName,\n    buttonSubmitText: props.buttonSubmitText,\n    submitDisabled: !inputs.name.isValid || !inputs.info.isValid,\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      name: \"name\",\n      className: `popup__input popup__input_type_name ${errorClasses.name.input}`,\n      maxLength: \"40\",\n      minLength: \"2\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      required: true,\n      value: inputs.name.value,\n      onChange: handleChange,\n      onInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `popup__input-error ${errorClasses.name.error}`,\n      id: \"name-input-error\",\n      children: errorMessages.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"occupation-input\",\n      name: \"occupation\",\n      className: `popup__input popup__input_type_occupation ${errorClasses.info.input}`,\n      maxLength: \"200\",\n      minLength: \"2\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n      required: true,\n      value: inputs.info.value,\n      onChange: handleChange,\n      onInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `popup__input-error popup__input-error_active ${errorClasses.info.error}`,\n      id: \"occupation-input-error\",\n      children: errorMessages.info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n} // function EditProfilePopup(props){\n//     const currentUser = React.useContext(CurrentUserContext);\n//     const [name, setName] = React.useState('');\n//     const [description, setDescription ] = React.useState('');\n//     function handleChangeName(evt) {\n//         setName(evt.target.value);\n//     };\n//     function handleChangeDescription(evt) {\n//         setDescription(evt.target.value);\n//     };\n//     React.useEffect(() => {\n//         setName(currentUser.name);\n//         setDescription(currentUser.about);\n//     }, [currentUser, props.isOpen]);\n//     function handleSubmit(evt) {\n//         evt.preventDefault(evt);\n//         props.onUpdateUser({\n//             name: name,\n//             about: description\n//         });\n//     };\n//     //---------------------------------------------------------------------------------------------------------------------\n//     return(\n//         <PopupWithForm \n//             name=\"profile\"\n//             title=\"Редактировать профиль\"\n//             button=\"profile\"\n//             buttonSubmitText={props.buttonSubmitText}\n//             isOpen={props.isOpen}\n//             onClose={props.onClose}\n//             onSubmit={handleSubmit}\n//         >\n//             <input\n//                 id=\"name-input\"\n//                 type=\"text\"\n//                 className=\"popup__input popup__input_type_name\"\n//                 name=\"name\"\n//                 placeholder=\"Ваше имя\"\n//                 minLength=\"2\"\n//                 maxLength=\"40\"\n//                 required\n//                 value={name|| ''}\n//                 onChange={handleChangeName}\n//             />\n//             <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n//             <input\n//                 id=\"occupation-input\"\n//                 type=\"text\"\n//                 className=\"popup__input popup__input_type_occupation\"\n//                 name=\"occupation\"\n//                 placeholder=\"Ваша профессия\"\n//                 minLength=\"2\"\n//                 maxLength=\"200\"\n//                 required\n//                 value={description || ''}\n//                 onChange={handleChangeDescription}\n//             />\n//             <span id=\"occupation-input-error\" className=\"popup__input-error popup__input-error_active\"></span>\n//         </PopupWithForm>\n//     )\n// }\n\n\n_s(EditProfilePopup, \"umdA7bGcwPBdLp6/8X+x6rw2JPg=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","popupInputClass","EditProfilePopup","props","currentUser","useContext","inputs","setInputs","useState","name","value","isValid","info","about","errorClasses","setErrorClasses","input","error","errorMessages","setErrorMessages","useEffect","isOpen","handleChange","e","validity","target","valid","handleInput","validationMessage","inputError","handleSubmit","preventDefault","onUpdateUser","submitName","buttonSubmitText","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,SAAQC,eAAR,QAA8B,oBAA9B,C,CACA;;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAMC,WAAW,GAAGN,KAAK,CAACO,UAAN,CAAiBL,kBAAjB,CAApB;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAe;AACzCC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAEN,WAAW,CAACK,IAArB;AAA2BE,MAAAA,OAAO,EAAE;AAApC,KADmC;AAEzCC,IAAAA,IAAI,EAAE;AAAEF,MAAAA,KAAK,EAAEN,WAAW,CAACS,KAArB;AAA4BF,MAAAA,OAAO,EAAE;AAArC;AAFmC,GAAf,CAA5B;AAKA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCjB,KAAK,CAACU,QAAN,CAAe;AACrDC,IAAAA,IAAI,EAAE;AAAEO,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAD+C;AAErDL,IAAAA,IAAI,EAAE;AAAGI,MAAAA,KAAK,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAF+C,GAAf,CAAxC;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,KAAK,CAACU,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWG,IAAAA,IAAI,EAAE;AAAjB,GAAf,CAA1C;AAEAd,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpB,QAAIjB,KAAK,CAACkB,MAAV,EAAkB;AAChBd,MAAAA,SAAS,CAAC;AACRE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAEN,WAAW,CAACK,IAArB;AAA2BE,UAAAA,OAAO,EAAE;AAApC,SADE;AAERC,QAAAA,IAAI,EAAE;AAAEF,UAAAA,KAAK,EAAEN,WAAW,CAACS,KAArB;AAA4BF,UAAAA,OAAO,EAAE;AAArC;AAFE,OAAD,CAAT;AAID,KALD,MAKO;AACLJ,MAAAA,SAAS,CAAC;AACRE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,OAAO,EAAE;AAAtB,SADE;AAERC,QAAAA,IAAI,EAAE;AAAEF,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,OAAO,EAAE;AAAtB;AAFE,OAAD,CAAT;AAID;;AACDI,IAAAA,eAAe,CAAC;AACdN,MAAAA,IAAI,EAAE;AAAEO,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OADQ;AAEdL,MAAAA,IAAI,EAAE;AAAEI,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB;AAFQ,KAAD,CAAf;AAID,GAhBD,EAgBG,CAACb,WAAD,EAAcD,KAAK,CAACkB,MAApB,CAhBH;;AAkBA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAACd,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcc,MAAAA;AAAd,QAA0BD,CAAC,CAACE,MAAlC;AACAlB,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAACG,IAAD,GAAQ;AAAEC,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,OAAO,EAAEa,QAAQ,CAACE;AAAlC;AAApB,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAIJ,CAAD,IAAO;AACzB,UAAM;AAACd,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcc,MAAAA,QAAd;AAAwBI,MAAAA;AAAxB,QAA6CL,CAAC,CAACE,MAArD;AACAlB,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAACG,IAAD,GAAQ;AAAEC,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,OAAO,EAAEa,QAAQ,CAACE;AAAlC;AAApB,KAAD,CAAT;AACAP,IAAAA,gBAAgB,CAAC,EAAC,GAAGD,aAAJ;AAAmB,OAACT,IAAD,GAAQmB;AAA3B,KAAD,CAAhB;AACAb,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AACd,OAACL,IAAD,GAAQ;AACNO,QAAAA,KAAK,EAAE,CAACQ,QAAQ,CAACE,KAAV,GAAkBzB,eAAe,CAAC4B,UAAlC,GAA+C,EADhD;AAENZ,QAAAA,KAAK,EAAE,CAACO,QAAQ,CAACE,KAAV,GAAkBzB,eAAe,CAACgB,KAAlC,GAA0C;AAF3C;AADM,KAAD,CAAf;AAMD,GAVD;;AAYA,QAAMa,YAAY,GAAIP,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACQ,cAAF;AACA5B,IAAAA,KAAK,CAAC6B,YAAN,CAAmB;AAAEvB,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAAP,CAAYC,KAApB;AAA2BE,MAAAA,IAAI,EAAEN,MAAM,CAACM,IAAP,CAAYF;AAA7C,KAAnB;AACD,GAHD;;AAKA,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAC,2HAFR;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,UAAU,EAAEP,KAAK,CAAC8B,UAJpB;AAKE,IAAA,gBAAgB,EAAE9B,KAAK,CAAC+B,gBAL1B;AAME,IAAA,cAAc,EAAE,CAAC5B,MAAM,CAACG,IAAP,CAAYE,OAAb,IAAwB,CAACL,MAAM,CAACM,IAAP,CAAYD,OANvD;AAOE,IAAA,MAAM,EAAER,KAAK,CAACkB,MAPhB;AAQE,IAAA,OAAO,EAAElB,KAAK,CAACgC,OARjB;AASE,IAAA,QAAQ,EAAEL,YATZ;AAAA,4BAWI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,EAAE,EAAC,YADL;AACkB,MAAA,IAAI,EAAC,MADvB;AAEE,MAAA,SAAS,EAAG,uCAAsChB,YAAY,CAACL,IAAb,CAAkBO,KAAM,EAF5E;AAGE,MAAA,SAAS,EAAC,IAHZ;AAGiB,MAAA,SAAS,EAAC,GAH3B;AAIE,MAAA,WAAW,EAAC,6CAJd;AAIyB,MAAA,QAAQ,MAJjC;AAKE,MAAA,KAAK,EAAEV,MAAM,CAACG,IAAP,CAAYC,KALrB;AAME,MAAA,QAAQ,EAAEY,YANZ;AAOE,MAAA,OAAO,EAAEK;AAPX;AAAA;AAAA;AAAA;AAAA,YAXJ,eAoBI;AACE,MAAA,SAAS,EAAG,sBAAqBb,YAAY,CAACL,IAAb,CAAkBQ,KAAM,EAD3D;AAEE,MAAA,EAAE,EAAC,kBAFL;AAAA,gBAIGC,aAAa,CAACT;AAJjB;AAAA;AAAA;AAAA;AAAA,YApBJ,eA2BI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,EAAE,EAAC,kBADL;AACwB,MAAA,IAAI,EAAC,YAD7B;AAEE,MAAA,SAAS,EAAG,6CAA4CK,YAAY,CAACF,IAAb,CAAkBI,KAAM,EAFlF;AAGE,MAAA,SAAS,EAAC,KAHZ;AAGkB,MAAA,SAAS,EAAC,GAH5B;AAIE,MAAA,WAAW,EAAC,iFAJd;AAI+B,MAAA,QAAQ,MAJvC;AAKE,MAAA,KAAK,EAAEV,MAAM,CAACM,IAAP,CAAYF,KALrB;AAME,MAAA,QAAQ,EAAEY,YANZ;AAOE,MAAA,OAAO,EAAEK;AAPX;AAAA;AAAA;AAAA;AAAA,YA3BJ,eAoCI;AACE,MAAA,SAAS,EAAG,gDAA+Cb,YAAY,CAACF,IAAb,CAAkBK,KAAM,EADrF;AAEE,MAAA,EAAE,EAAC,wBAFL;AAAA,gBAIGC,aAAa,CAACN;AAJjB;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GA1KSV,gB;;KAAAA,gB;AA4KT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport {popupInputClass} from '../utils/constants';\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [inputs, setInputs] = React.useState({\n    name: { value: currentUser.name, isValid: true, },\n    info: { value: currentUser.about, isValid: true, },\n  });\n\n  const [errorClasses, setErrorClasses] = React.useState({\n    name: { input: '', error: '', }, \n    info: {  input: '', error: '', },\n  });\n    \n  const [errorMessages, setErrorMessages] = React.useState({name: '', info: ''});\n    \n  React.useEffect(() => {\n    if (props.isOpen) {\n      setInputs({ \n        name: { value: currentUser.name, isValid: true, },\n        info: { value: currentUser.about, isValid: true, },\n      });      \n    } else {\n      setInputs({ \n        name: { value: '', isValid: false, },\n        info: { value: '', isValid: false, },\n      });\n    }\n    setErrorClasses({\n      name: { input: '', error: '', }, \n      info: { input: '', error: '', },\n    });\n  }, [currentUser, props.isOpen]);\n\n  const handleChange = (e) => {\n    const {name, value, validity} = e.target;\n    setInputs({...inputs, [name]: { value: value, isValid: validity.valid, }});\n  };\n\n  const handleInput = (e) => {\n    const {name, value, validity, validationMessage} = e.target;\n    setInputs({...inputs, [name]: { value: value, isValid: validity.valid, }});\n    setErrorMessages({...errorMessages, [name]: validationMessage});\n    setErrorClasses({...errorClasses,\n      [name]: { \n        input: !validity.valid ? popupInputClass.inputError : '', \n        error: !validity.valid ? popupInputClass.error : '', \n      }, \n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onUpdateUser({ name: inputs.name.value, info: inputs.info.value });\n  };\n\n  return (\n    <PopupWithForm \n      name=\"profile\"\n      title=\"Редактировать профиль\" \n      button=\"profile\"\n      submitName={props.submitName} \n      buttonSubmitText={props.buttonSubmitText}\n      submitDisabled={!inputs.name.isValid || !inputs.info.isValid}\n      isOpen={props.isOpen} \n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n        <input type=\"text\" \n          id=\"name-input\" name=\"name\" \n          className={`popup__input popup__input_type_name ${errorClasses.name.input}`} \n          maxLength=\"40\" minLength=\"2\" \n          placeholder=\"Ваше имя\" required\n          value={inputs.name.value}\n          onChange={handleChange}\n          onInput={handleInput}\n        />\n        <span \n          className={`popup__input-error ${errorClasses.name.error}`} \n          id=\"name-input-error\"\n        >\n          {errorMessages.name}\n        </span>\n\n        <input type=\"text\" \n          id=\"occupation-input\" name=\"occupation\" \n          className={`popup__input popup__input_type_occupation ${errorClasses.info.input}`} \n          maxLength=\"200\" minLength=\"2\" \n          placeholder=\"Ваша профессия\" required\n          value={inputs.info.value}\n          onChange={handleChange}\n          onInput={handleInput}\n        />\n        <span \n          className={`popup__input-error popup__input-error_active ${errorClasses.info.error}`} \n          id=\"occupation-input-error\"\n        >\n          {errorMessages.info}\n        </span>\n    </PopupWithForm> \n  );\n}\n\n// function EditProfilePopup(props){\n//     const currentUser = React.useContext(CurrentUserContext);\n//     const [name, setName] = React.useState('');\n//     const [description, setDescription ] = React.useState('');\n\n//     function handleChangeName(evt) {\n//         setName(evt.target.value);\n//     };\n\n//     function handleChangeDescription(evt) {\n//         setDescription(evt.target.value);\n//     };\n\n//     React.useEffect(() => {\n//         setName(currentUser.name);\n//         setDescription(currentUser.about);\n//     }, [currentUser, props.isOpen]);\n\n//     function handleSubmit(evt) {\n//         evt.preventDefault(evt);\n\n//         props.onUpdateUser({\n//             name: name,\n//             about: description\n//         });\n//     };\n\n//     //---------------------------------------------------------------------------------------------------------------------\n\n//     return(\n//         <PopupWithForm \n//             name=\"profile\"\n//             title=\"Редактировать профиль\"\n//             button=\"profile\"\n//             buttonSubmitText={props.buttonSubmitText}\n//             isOpen={props.isOpen}\n//             onClose={props.onClose}\n//             onSubmit={handleSubmit}\n//         >\n//             <input\n//                 id=\"name-input\"\n//                 type=\"text\"\n//                 className=\"popup__input popup__input_type_name\"\n//                 name=\"name\"\n//                 placeholder=\"Ваше имя\"\n//                 minLength=\"2\"\n//                 maxLength=\"40\"\n//                 required\n//                 value={name|| ''}\n//                 onChange={handleChangeName}\n//             />\n//             <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n//             <input\n//                 id=\"occupation-input\"\n//                 type=\"text\"\n//                 className=\"popup__input popup__input_type_occupation\"\n//                 name=\"occupation\"\n//                 placeholder=\"Ваша профессия\"\n//                 minLength=\"2\"\n//                 maxLength=\"200\"\n//                 required\n//                 value={description || ''}\n//                 onChange={handleChangeDescription}\n//             />\n//             <span id=\"occupation-input-error\" className=\"popup__input-error popup__input-error_active\"></span>\n//         </PopupWithForm>\n//     )\n        \n// }\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}