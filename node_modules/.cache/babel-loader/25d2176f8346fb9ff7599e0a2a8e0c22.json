{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport Avatar from '../images/Avatar.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: '',\n    name: ''\n  });\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да'); //Создание обработчика события, который изменяет внутренне состояние \n\n  function handleEditAvatarClick() {\n    onEditAvatarPopupOpen(true);\n  }\n\n  ;\n\n  function handleEditProfileClick() {\n    onEditProfilePopupOpen(true);\n  }\n\n  ;\n\n  function handleAddPlaceClick() {\n    onAddPlacePopupOpen(true);\n  }\n\n  ;\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  ;\n\n  function handleCardDeleteClick(card) {\n    onDeleteCardPopup(true);\n    setCardDelete(card);\n  }\n\n  ; //Функция закрытия всех попапов\n\n  function closeAllPopups() {\n    onEditAvatarPopupOpen(false);\n    onEditProfilePopupOpen(false);\n    onAddPlacePopupOpen(false);\n    onDeleteCardPopup(false);\n    setCardDelete({\n      link: '',\n      name: ''\n    });\n    setSelectedCard({\n      link: '',\n      name: ''\n    });\n  }\n\n  ; // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n  // Функция, которая отвечает за закрытие попапов по клику вне формы\n\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains('popup')) {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('mousedown', handleOverlayClick);\n    return () => {\n      document.removeEventListener('mousedown', handleOverlayClick);\n    };\n  }, // колбэк-очистка\n  []); // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('keyup', handleEscapeClick);\n    return () => {\n      document.removeEventListener('keyup', handleEscapeClick);\n    };\n  }, []); // Чтение данных с сервера (информация о пользователе + информация о карточках)\n\n  React.useEffect(() => {\n    api.getUserInfo( // Функция колбэк получает информацию о пользователе в виде объекта\n    // Объект содержит свойства: name, about, avatar, _id.\n    user => {\n      console.log(user);\n      setCurrentUser(user); // После получения идентификатора пользователя получим карточки \n\n      api.getCards( // После получения карточек - нарисуем их\n      cards => {\n        console.log(cards);\n        setCards(cards);\n      }, err => {\n        console.log(\"В ходе получения карточек возникла ошибка.\");\n        console.log(err);\n      });\n    }, err => {\n      console.log(\"В ходе получения информации о пользователе возникла ошибка.\");\n      console.log(err);\n    });\n  }, []); // Установка лайка карточкам\n\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    api.changeLike(card._id, !isLiked, res => {\n      console.log(\"Результат выполнения changeLike\");\n      console.log(res);\n      setCards(condition => condition.map(currentCard => currentCard._id === card._id ? res : currentCard));\n    }, err => {\n      console.log(\"Ошибка в результате выполнения changeLike\");\n      console.log(err);\n    });\n  }\n\n  ; // function handleCardLike(card) {\n  //   // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n  //   const isLiked = card.likes.some(like => like._id === currentUser._id);\n  //   api.changeLike(card._id, !isLiked)\n  //   .then((newCard) => {\n  //     setCards((condition) => condition.map((currentCard) => currentCard._id === card._id ? newCard : currentCard));\n  //   })\n  //   .catch((err) => {\n  //       console.log(err);\n  //   });\n  // };\n  //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n\n  function handleCardDelete(card) {\n    setRemovePopupButtonText('Удаление...'); // Исключаем из массива удаленную карточку\n\n    const newCards = cards.filter(currentCard => currentCard._id !== card._id);\n    api.deleteCard(card._id, res => {\n      console.log(\"Результат выполнения deleteCard\");\n      console.log(res); // Обновляем состояние \n\n      setCards(newCards);\n      closeAllPopups();\n    }, err => {\n      console.log(\"Ошибка в результате выполнения deleteCard\");\n      console.log(err);\n    }, () => {\n      setRemovePopupButtonText('Да');\n    });\n  }\n\n  ; // Функция обновления пользователя \n\n  function handleUpdateUser(user) {\n    setProfilePopupButtonText('Сохранение...');\n    api.editProfile(user, res => {\n      console.log(\"Результат выполнения editProfile\");\n      console.log(res);\n      setCurrentUser(res);\n      closeAllPopups();\n    }, err => {\n      console.log(\"Ошибка в результате выполнения editProfile\");\n      console.log(err);\n    }, () => {\n      setProfilePopupButtonText('Сохранить');\n    });\n  }\n\n  ; // Функция обновления аватара\n\n  function handleUpdateAvatar(avatar) {\n    setAvatarPopupButtonText('Сохранение...');\n    api.renewAvatar(avatar, // 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n    res => {\n      // 2й аргумент с типом Function (callback)\n      console.log(\"Результат выполнения renewAvatar\");\n      console.log(res);\n      setCurrentUser(res);\n      closeAllPopups();\n    }, err => {\n      // 3й аргумент с типом Function (errback)\n      console.log(\"Ошибка в результате выполнения renewAvatar\");\n      console.log(err);\n    }, () => {\n      // 4й аргумент с типом Function (finalback)\n      setAvatarPopupButtonText('Сохранить');\n    });\n  }\n\n  ; // Функция добавления места \n\n  function handleAddPlaceSubmit(cardNew) {\n    setPlacePopupButtonText('Добавление...');\n    api.addCard(cardNew, res => {\n      console.log(\"Результат выполнения addCard\");\n      console.log(res);\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }, err => {\n      console.log(\"Ошибка в результате выполнения addCard\");\n      console.log(err);\n    }, () => {\n      setPlacePopupButtonText('Создать');\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDeleteClick,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        buttonSubmitText: profilePopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        buttonSubmitText: placePopupButtonText,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        buttonSubmitText: avatarPopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeleteCardPopup,\n        onClose: closeAllPopups,\n        onSubmitDeleteCard: handleCardDelete,\n        card: cardDelete,\n        buttonSubmitText: removePopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j/B23HzNdlmKa6H+LcXKgwr+OLU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","EditProfilePopup","Avatar","App","isEditAvatarPopupOpen","onEditAvatarPopupOpen","useState","isEditProfilePopupOpen","onEditProfilePopupOpen","isAddPlacePopupOpen","onAddPlacePopupOpen","isDeleteCardPopup","onDeleteCardPopup","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","cards","setCards","cardDelete","setCardDelete","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleCardDeleteClick","closeAllPopups","useEffect","handleOverlayClick","evt","target","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","getUserInfo","user","console","log","getCards","err","handleCardLike","isLiked","likes","some","like","_id","changeLike","res","condition","map","currentCard","handleCardDelete","newCards","filter","deleteCard","handleUpdateUser","editProfile","handleUpdateAvatar","avatar","renewAvatar","handleAddPlaceSubmit","cardNew","addCard"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,qBAAD,EAAwBC,qBAAxB,IAAiDd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAvD;AACA,QAAM,CAACC,sBAAD,EAAyBC,sBAAzB,IAAmDjB,KAAK,CAACe,QAAN,CAAe,KAAf,CAAzD;AACA,QAAM,CAACG,mBAAD,EAAsBC,mBAAtB,IAA6CnB,KAAK,CAACe,QAAN,CAAe,KAAf,CAAnD;AACA,QAAM,CAACK,iBAAD,EAAoBC,iBAApB,IAAyCrB,KAAK,CAACe,QAAN,CAAe,KAAf,CAA/C;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCvB,KAAK,CAACe,QAAN,CAAe;AAACS,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAf,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC3B,KAAK,CAACe,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoB7B,KAAK,CAACe,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8B/B,KAAK,CAACe,QAAN,CAAe,EAAf,CAApC;AAEA,QAAM,CAACiB,sBAAD,EAAyBC,yBAAzB,IAAsDjC,KAAK,CAACe,QAAN,CAAe,WAAf,CAA5D;AACA,QAAM,CAACmB,qBAAD,EAAwBC,wBAAxB,IAAoDnC,KAAK,CAACe,QAAN,CAAe,WAAf,CAA1D;AACA,QAAM,CAACqB,oBAAD,EAAuBC,uBAAvB,IAAkDrC,KAAK,CAACe,QAAN,CAAe,SAAf,CAAxD;AACA,QAAM,CAACuB,qBAAD,EAAwBC,wBAAxB,IAAoDvC,KAAK,CAACe,QAAN,CAAe,IAAf,CAA1D,CAhBa,CAmBb;;AACA,WAASyB,qBAAT,GAAiC;AAC/B1B,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAAA;;AAED,WAAS2B,sBAAT,GAAkC;AAChCxB,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AAAA;;AAED,WAASyB,mBAAT,GAA+B;AAC7BvB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;;AAAA;;AAED,WAASwB,eAAT,CAAyBC,IAAzB,EAA+B;AAC7BrB,IAAAA,eAAe,CAACqB,IAAD,CAAf;AACD;;AAAA;;AAED,WAASC,qBAAT,CAA+BD,IAA/B,EAAqC;AACnCvB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAU,IAAAA,aAAa,CAACa,IAAD,CAAb;AACD;;AAAA,GAvCY,CAyCb;;AACA,WAASE,cAAT,GAA0B;AACxBhC,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAG,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAU,IAAAA,aAAa,CAAC;AAACP,MAAAA,IAAI,EAAE,EAAP;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAAD,CAAb;AACAF,IAAAA,eAAe,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAAD,CAAf;AACD;;AAAA,GAjDY,CAmDf;AACA;;AACEzB,EAAAA,KAAK,CAAC+C,SAAN,CAAgB,MAAM;AACpB,aAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,UAAIA,GAAG,CAACC,MAAJ,CAAWC,SAAX,CAAqBC,QAArB,CAA8B,OAA9B,CAAJ,EAA4C;AAC1CN,QAAAA,cAAc;AACf;AACF;;AACDO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AAEA,WAAM,MAAM;AACVK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD,KAFD;AAGD,GAXD,EAYA;AACA,IAbA,EArDa,CAoEb;;AACAhD,EAAAA,KAAK,CAAC+C,SAAN,CAAgB,MAAM;AACpB,aAASS,iBAAT,CAA2BP,GAA3B,EAAgC;AAC9B,UAAIA,GAAG,CAACQ,GAAJ,KAAY,QAAhB,EAA0B;AACxBX,QAAAA,cAAc;AACf;AACF;;AACDO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCE,iBAAnC;AAEA,WAAO,MAAM;AACXH,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCC,iBAAtC;AACD,KAFD;AAGD,GAXD,EAWG,EAXH,EArEa,CAmFb;;AACAxD,EAAAA,KAAK,CAAC+C,SAAN,CAAgB,MAAM;AACpB1C,IAAAA,GAAG,CAACqD,WAAJ,EACE;AACA;AACCC,IAAAA,IAAD,IAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAhC,MAAAA,cAAc,CAACgC,IAAD,CAAd,CAFQ,CAGR;;AACAtD,MAAAA,GAAG,CAACyD,QAAJ,EACE;AACClC,MAAAA,KAAD,IAAW;AACTgC,QAAAA,OAAO,CAACC,GAAR,CAAYjC,KAAZ;AACAC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OALH,EAMGmC,GAAD,IAAS;AACPH,QAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OATH;AAWD,KAlBH,EAmBGA,GAAD,IAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAtBH;AAwBD,GAzBD,EAyBG,EAzBH,EApFa,CA+Gb;;AACA,WAASC,cAAT,CAAwBpB,IAAxB,EAA8B;AAC5B;AACA,UAAMqB,OAAO,GAAGrB,IAAI,CAACsB,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAa3C,WAAW,CAAC2C,GAAjD,CAAhB;AACAhE,IAAAA,GAAG,CAACiE,UAAJ,CAAe1B,IAAI,CAACyB,GAApB,EAAyB,CAACJ,OAA1B,EACGM,GAAD,IAAS;AACPX,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA1C,MAAAA,QAAQ,CAAE2C,SAAD,IAAeA,SAAS,CAACC,GAAV,CAAeC,WAAD,IAAiBA,WAAW,CAACL,GAAZ,KAAoBzB,IAAI,CAACyB,GAAzB,GAA+BE,GAA/B,GAAqCG,WAApE,CAAhB,CAAR;AACD,KALH,EAMGX,GAAD,IAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KATH;AAUD;;AAAA,GA7HY,CA+Hb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAASY,gBAAT,CAA0B/B,IAA1B,EAAgC;AAC9BL,IAAAA,wBAAwB,CAAC,aAAD,CAAxB,CAD8B,CAE9B;;AACA,UAAMqC,QAAQ,GAAGhD,KAAK,CAACiD,MAAN,CAAcH,WAAD,IAAiBA,WAAW,CAACL,GAAZ,KAAoBzB,IAAI,CAACyB,GAAvD,CAAjB;AACAhE,IAAAA,GAAG,CAACyE,UAAJ,CAAelC,IAAI,CAACyB,GAApB,EACGE,GAAD,IAAS;AACPX,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAFO,CAGP;;AACA1C,MAAAA,QAAQ,CAAC+C,QAAD,CAAR;AACA9B,MAAAA,cAAc;AACf,KAPH,EAQGiB,GAAD,IAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAXH,EAYE,MAAM;AACJxB,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,KAdH;AAgBD;;AAAA,GAhKY,CAkKb;;AACA,WAASwC,gBAAT,CAA0BpB,IAA1B,EAAgC;AAC9B1B,IAAAA,yBAAyB,CAAC,eAAD,CAAzB;AACA5B,IAAAA,GAAG,CAAC2E,WAAJ,CAAgBrB,IAAhB,EACGY,GAAD,IAAS;AACPX,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA5C,MAAAA,cAAc,CAAC4C,GAAD,CAAd;AACAzB,MAAAA,cAAc;AACf,KANH,EAOGiB,GAAD,IAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAVH,EAWE,MAAM;AACJ9B,MAAAA,yBAAyB,CAAC,WAAD,CAAzB;AACD,KAbH;AAcD;;AAAA,GAnLY,CAqLb;;AACA,WAASgD,kBAAT,CAA4BC,MAA5B,EAAoC;AAClC/C,IAAAA,wBAAwB,CAAC,eAAD,CAAxB;AACA9B,IAAAA,GAAG,CAAC8E,WAAJ,CAAgBD,MAAhB,EAAwB;AACrBX,IAAAA,GAAD,IAAS;AAAa;AACpBX,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA5C,MAAAA,cAAc,CAAC4C,GAAD,CAAd;AACAzB,MAAAA,cAAc;AACf,KANH,EAOGiB,GAAD,IAAS;AAAa;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAVH,EAWE,MAAM;AAAgB;AACpB5B,MAAAA,wBAAwB,CAAC,WAAD,CAAxB;AACD,KAbH;AAeD;;AAAA,GAvMY,CAyMb;;AACA,WAASiD,oBAAT,CAA8BC,OAA9B,EAAuC;AACrChD,IAAAA,uBAAuB,CAAC,eAAD,CAAvB;AACAhC,IAAAA,GAAG,CAACiF,OAAJ,CAAYD,OAAZ,EACGd,GAAD,IAAS;AACPX,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA1C,MAAAA,QAAQ,CAAC,CAAC0C,GAAD,EAAM,GAAG3C,KAAT,CAAD,CAAR;AACAkB,MAAAA,cAAc;AACf,KANH,EAOGiB,GAAD,IAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAVH,EAWE,MAAM;AACJ1B,MAAAA,uBAAuB,CAAC,SAAD,CAAvB;AACD,KAbH;AAeD;;AAAA;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACA,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAEX,WAApC;AAAA,mCAEA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA,QAAC,IAAD;AACE,QAAA,YAAY,EAAEc,qBADhB;AAEE,QAAA,aAAa,EAAEC,sBAFjB;AAGE,QAAA,UAAU,EAAEC,mBAHd;AAIE,QAAA,WAAW,EAAEC,eAJf;AAKE,QAAA,UAAU,EAAEqB,cALd;AAME,QAAA,YAAY,EAAEnB,qBANhB;AAOE,QAAA,KAAK,EAAEjB;AAPT;AAAA;AAAA;AAAA;AAAA,cAJA,eAcA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAdA,eAgBA,QAAC,gBAAD;AACE,QAAA,MAAM,EAAEZ,sBADV;AAEE,QAAA,OAAO,EAAE8B,cAFX;AAGE,QAAA,YAAY,EAAEiC,gBAHhB;AAIE,QAAA,gBAAgB,EAAE/C;AAJpB;AAAA;AAAA;AAAA;AAAA,cAhBA,eAuBA,QAAC,aAAD;AACE,QAAA,MAAM,EAAEd,mBADV;AAEE,QAAA,OAAO,EAAE4B,cAFX;AAGE,QAAA,gBAAgB,EAAEV,oBAHpB;AAIE,QAAA,UAAU,EAAEgD;AAJd;AAAA;AAAA;AAAA;AAAA,cAvBA,eA8BA,QAAC,eAAD;AACE,QAAA,MAAM,EAAEvE,qBADV;AAEE,QAAA,OAAO,EAAEiC,cAFX;AAGE,QAAA,cAAc,EAAEmC,kBAHlB;AAIE,QAAA,gBAAgB,EAAE/C;AAJpB;AAAA;AAAA;AAAA;AAAA,cA9BA,eAqCA,QAAC,eAAD;AACE,QAAA,MAAM,EAAEd,iBADV;AAEE,QAAA,OAAO,EAAE0B,cAFX;AAGE,QAAA,kBAAkB,EAAE6B,gBAHtB;AAIE,QAAA,IAAI,EAAE7C,UAJR;AAKE,QAAA,gBAAgB,EAAEQ;AALpB;AAAA;AAAA;AAAA;AAAA,cArCA,eA6CA,QAAC,UAAD;AACE,QAAA,IAAI,EAAEhB,YADR;AAEE,QAAA,OAAO,EAAEwB;AAFX;AAAA;AAAA;AAAA;AAAA,cA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GApRQlC,G;;KAAAA,G;AAsRT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js'\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport Avatar from '../images/Avatar.png'\n\n\nfunction App() {\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({link: '', name: ''});\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да');\n\n\n  //Создание обработчика события, который изменяет внутренне состояние \n  function handleEditAvatarClick() {\n    onEditAvatarPopupOpen(true);\n  };\n\n  function handleEditProfileClick() {\n    onEditProfilePopupOpen(true);\n  };\n\n  function handleAddPlaceClick() {\n    onAddPlacePopupOpen(true);\n  };\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n\n  function handleCardDeleteClick(card) {\n    onDeleteCardPopup(true);\n    setCardDelete(card);\n  };\n\n  //Функция закрытия всех попапов\n  function closeAllPopups() {\n    onEditAvatarPopupOpen(false);\n    onEditProfilePopupOpen(false);\n    onAddPlacePopupOpen(false);\n    onDeleteCardPopup(false);\n    setCardDelete({link: '',  name: ''});\n    setSelectedCard({link: '',  name: ''});\n  };\n\n// Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n// Функция, которая отвечает за закрытие попапов по клику вне формы\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains('popup')) {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('mousedown', handleOverlayClick);\n\n    return() => {\n      document.removeEventListener('mousedown', handleOverlayClick);\n    }\n  }, \n  // колбэк-очистка\n  []);\n\n  // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keyup', handleEscapeClick);\n\n    return () => {\n      document.removeEventListener('keyup', handleEscapeClick);\n    }\n  }, []);\n\n\n  // Чтение данных с сервера (информация о пользователе + информация о карточках)\n  React.useEffect(() => {\n    api.getUserInfo(\n      // Функция колбэк получает информацию о пользователе в виде объекта\n      // Объект содержит свойства: name, about, avatar, _id.\n      (user) => {\n        console.log(user);\n        setCurrentUser(user);\n        // После получения идентификатора пользователя получим карточки \n        api.getCards( \n          // После получения карточек - нарисуем их\n          (cards) => {\n            console.log(cards);\n            setCards(cards)\n          },\n          (err) => {\n            console.log(\"В ходе получения карточек возникла ошибка.\");\n            console.log(err);\n          }\n        );\n      },\n      (err) => {\n        console.log(\"В ходе получения информации о пользователе возникла ошибка.\");\n        console.log(err);\n      }\n    );\n  }, []);\n\n  // Установка лайка карточкам\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    api.changeLike(card._id, !isLiked, \n      (res) => {\n        console.log(\"Результат выполнения changeLike\");\n        console.log(res);\n        setCards((condition) => condition.map((currentCard) => currentCard._id === card._id ? res : currentCard));\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения changeLike\");\n        console.log(err);\n      })\n  };\n\n  // function handleCardLike(card) {\n  //   // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n  //   const isLiked = card.likes.some(like => like._id === currentUser._id);\n  //   api.changeLike(card._id, !isLiked)\n  //   .then((newCard) => {\n  //     setCards((condition) => condition.map((currentCard) => currentCard._id === card._id ? newCard : currentCard));\n  //   })\n  //   .catch((err) => {\n  //       console.log(err);\n  //   });\n  // };\n\n  //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n  function handleCardDelete(card) {\n    setRemovePopupButtonText('Удаление...')\n    // Исключаем из массива удаленную карточку\n    const newCards = cards.filter((currentCard) => currentCard._id !== card._id);\n    api.deleteCard(card._id, \n      (res) => {\n        console.log(\"Результат выполнения deleteCard\");\n        console.log(res);\n        // Обновляем состояние \n        setCards(newCards);\n        closeAllPopups();\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения deleteCard\");\n        console.log(err);\n      },\n      () => {\n        setRemovePopupButtonText('Да');\n      }\n    );\n  };\n\n  // Функция обновления пользователя \n  function handleUpdateUser(user) {\n    setProfilePopupButtonText('Сохранение...');\n    api.editProfile(user, \n      (res) => {\n        console.log(\"Результат выполнения editProfile\");\n        console.log(res);\n        setCurrentUser(res);\n        closeAllPopups();\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения editProfile\");\n        console.log(err);\n      },\n      () => {\n        setProfilePopupButtonText('Сохранить');\n      });\n  };\n\n  // Функция обновления аватара\n  function handleUpdateAvatar(avatar) {\n    setAvatarPopupButtonText('Сохранение...');\n    api.renewAvatar(avatar, // 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n      (res) => {            // 2й аргумент с типом Function (callback)\n        console.log(\"Результат выполнения renewAvatar\");\n        console.log(res);\n        setCurrentUser(res);\n        closeAllPopups();\n      },\n      (err) => {            // 3й аргумент с типом Function (errback)\n        console.log(\"Ошибка в результате выполнения renewAvatar\");\n        console.log(err);\n      },\n      () => {               // 4й аргумент с типом Function (finalback)\n        setAvatarPopupButtonText('Сохранить');\n      }\n    );\n  };\n\n  // Функция добавления места \n  function handleAddPlaceSubmit(cardNew) {\n    setPlacePopupButtonText('Добавление...');\n    api.addCard(cardNew, \n      (res) => {\n        console.log(\"Результат выполнения addCard\");\n        console.log(res);\n        setCards([res, ...cards]);\n        closeAllPopups();\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения addCard\");\n        console.log(err);\n      },\n      () => {\n        setPlacePopupButtonText('Создать');\n      }\n    );\n  };\n\n  return (\n    <div className=\"page\">\n    <CurrentUserContext.Provider value={currentUser}> {/*текущее значение контекста из ближайшего подходящего Provider выше в дереве компонентов.*/}\n\n    <Header/>\n\n    <Main\n      onEditAvatar={handleEditAvatarClick}\n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onCardClick={handleCardClick}\n      onCardLike={handleCardLike}\n      onCardDelete={handleCardDeleteClick}\n      cards={cards}\n    />\n\n    <Footer/>\n\n    <EditProfilePopup\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      onUpdateUser={handleUpdateUser}\n      buttonSubmitText={profilePopupButtonText}\n    />\n    \n    <AddPlacePopup\n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      buttonSubmitText={placePopupButtonText}\n      onAddPlace={handleAddPlaceSubmit}\n    />\n\n    <EditAvatarPopup\n      isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}\n      onUpdateAvatar={handleUpdateAvatar}\n      buttonSubmitText={avatarPopupButtonText}\n    />\n\n    <DeleteCardPopup \n      isOpen={isDeleteCardPopup}\n      onClose={closeAllPopups}\n      onSubmitDeleteCard={handleCardDelete}\n      card={cardDelete}\n      buttonSubmitText={removePopupButtonText}\n    />\n\n    <ImagePopup\n      card={selectedCard}\n      onClose={closeAllPopups}\n    />\n\n    </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}