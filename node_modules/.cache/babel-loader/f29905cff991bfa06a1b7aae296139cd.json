{"ast":null,"code":"import _classCallCheck from\"/Users/Stasya/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/Stasya/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}// Возврат ответа об ошибке от сервера\n_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){// Метод .json принимает предоставленный JSON, строит его и отправляет его клиенту\nreturn res.json();}// Promise  позволяет создать обертку для значения, который еще не известен при создании промиса. Нужен дял асинхронных операций\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.statusText,\", \\u0441 \\u043A\\u043E\\u0434\\u043E\\u043C: \").concat(res.status));}/**\n   * Метод получения информации о пользователе с сервера \n   * @param {Function} callback Функция обработки успешного ответа от сервера, получает информацию о пользователе  \n   * @param {Function} errback Функция обработки ошибки от сервера\n   */},{key:\"getUserInfo\",value:function getUserInfo(callback,errback){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);});}/**\n   * Метод получения карточек с сервера \n   * @param {Function} callback принимает идентификатор пользователя и результат принятия \n   * @param {Function} errback \n   */},{key:\"getCards\",value:function getCards(callback,errback){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);});}/**\n   * Метод редактирования профиля пользователя\n   * @param {Object} userData Данные о пользователе\n   * userData.name {String} \n   * userData.about {String}\n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */},{key:\"editProfile\",value:function editProfile(userData,callback,errback,finalback){if(!userData.name){console.error(\"Api.editProfile в аргументе userData не передано обязательное поле 'name'. Запрос не будет выполнен.\");return;}if(!userData.about){console.error(\"Api.editProfile в аргументе userData не передано обязательное поле 'about'. Запрос не будет выполнен.\");return;}var url=\"\".concat(this._baseUrl,\"/users/me\");var hdr=this._headers;hdr['Content-Type']='application/json';var opts={method:'PATCH',headers:hdr,body:JSON.stringify(userData)};return fetch(url,opts).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);}).finally(finalback);}/**\n   * Метод загрузки новой карточки на сервер\n   * @param {Object} cardData Данные о карточке\n   * cardData.name {String}\n   * cardData.link {String}\n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */},{key:\"addCard\",value:function addCard(cardData,callback,errback,finalback){if(!cardData.name){console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'name'. Запрос не будет выполнен.\");return;}if(!cardData.link){console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'link'. Запрос не будет выполнен.\");return;}var url=\"\".concat(this._baseUrl,\"/cards\");var hdr=this._headers;hdr['Content-Type']='application/json';var opts={method:'POST',headers:hdr,body:JSON.stringify(cardData)};return fetch(url,opts).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);}).finally(finalback);}/**\n   * Метод удаления карточки \n   * @param {String} cardId Индентификатор карточки \n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */},{key:\"deleteCard\",value:function deleteCard(cardId,callback,errback,finalback){if(!cardId){console.error(\"Api.deleteCard не передан обязательный аргумент cardId. Запрос не будет выполнен.\");return;}var url=\"\".concat(this._baseUrl,\"/cards/\").concat(cardId);var hdr=this._headers;hdr['Content-Type']='application/json';var opts={method:'DELETE',headers:hdr};return fetch(url,opts).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);}).finally(finalback);}/**\n   * Метод постановки/удаления лайка на карточку\n   * @param {String} cardId Идентификатор карточки \n   * @param {Function} callback \n   * @param {Function} errback \n   */},{key:\"changeLike\",value:function changeLike(cardId,like,callback,errback){if(!cardId){console.error(\"Api.changeLike не передан обязательный аргумент cardId. Запрос не будет выполнен.\");return;}var url=\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId);var opts={method:like?'PUT':'DELETE',headers:this._headers};return fetch(url,opts).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);});}/**\n   * Метод обновления аватара\n   * @param {String} avatarLink \n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */},{key:\"renewAvatar\",value:function renewAvatar(avatarLink,callback,errback,finalback){if(!avatarLink){console.error(\"Api.renewAvatar не передан обязательный аргумент avatarLink. Запрос не будет выполнен.\");return;}var url=\"\".concat(this._baseUrl,\"/users/me/avatar\");var hdr=this._headers;hdr['Content-Type']='application/json';var opts={method:'PATCH',headers:hdr,body:JSON.stringify({avatar:avatarLink})};return fetch(url,opts).then(this._checkResponse).then(function(result){callback(result);}).catch(function(err){errback(err);}).finally(finalback);}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-30\",headers:{authorization:\"08bc75e7-78fb-46ea-8791-989ceb63ff7a\",'Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/mesto-react/src/utils/Api.js"],"names":["Api","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","statusText","status","callback","errback","fetch","then","_checkResponse","result","catch","err","userData","finalback","name","console","error","about","url","hdr","opts","method","body","JSON","stringify","finally","cardData","link","cardId","like","avatarLink","avatar","api","authorization"],"mappings":"uPAAMA,CAAAA,G,yBACJ,kBAAkC,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,OAAW,MAAXA,OAAW,2BAChC,KAAKC,QAAL,CAAgBF,OAAhB,CACA,KAAKG,QAAL,CAAgBF,OAAhB,CACD,CACD;8CACA,wBAAeG,GAAf,CAAoB,CAClB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV;AACA,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD;AACA,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,UAA9B,qDAAsDL,GAAG,CAACM,MAA1D,EAAP,CACD,CAED;AACF;AACA;AACA;AACA,K,2BACE,qBAAYC,QAAZ,CAAsBC,OAAtB,CAA+B,CAC7B,MAAOC,CAAAA,KAAK,WAAI,KAAKX,QAAT,cAA8B,CACxCD,OAAO,CAAE,KAAKE,QAD0B,CAA9B,CAAL,CAGJW,IAHI,CAGC,KAAKC,cAHN,EAIJD,IAJI,CAIC,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CANI,EAOJC,KAPI,CAOE,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CATI,CAAP,CAUD,CAED;AACF;AACA;AACA;AACA,K,wBACE,kBAASP,QAAT,CAAmBC,OAAnB,CAA4B,CAC1B,MAAOC,CAAAA,KAAK,WAAI,KAAKX,QAAT,WAA2B,CACrCD,OAAO,CAAE,KAAKE,QADuB,CAA3B,CAAL,CAGJW,IAHI,CAGC,KAAKC,cAHN,EAIJD,IAJI,CAIC,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CANI,EAOJC,KAPI,CAOE,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CATI,CAAP,CAUD,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K,2BACE,qBAAYC,QAAZ,CAAsBR,QAAtB,CAAgCC,OAAhC,CAAyCQ,SAAzC,CAAoD,CAClD,GAAI,CAACD,QAAQ,CAACE,IAAd,CAAoB,CAClBC,OAAO,CAACC,KAAR,CAAc,sGAAd,EACA,OACD,CACD,GAAI,CAACJ,QAAQ,CAACK,KAAd,CAAqB,CACnBF,OAAO,CAACC,KAAR,CAAc,uGAAd,EACA,OACD,CACD,GAAME,CAAAA,GAAG,WAAM,KAAKvB,QAAX,aAAT,CACA,GAAMwB,CAAAA,GAAG,CAAG,KAAKvB,QAAjB,CACAuB,GAAG,CAAC,cAAD,CAAH,CAAsB,kBAAtB,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,OADG,CAEX3B,OAAO,CAAEyB,GAFE,CAGXG,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAHK,CAAb,CAMA,MAAON,CAAAA,KAAK,CAACY,GAAD,CAAME,IAAN,CAAL,CACJb,IADI,CACC,KAAKC,cADN,EAEJD,IAFI,CAEC,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CAJI,EAKJC,KALI,CAKE,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CAPI,EAQJc,OARI,CAQIZ,SARJ,CAAP,CASD,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K,uBACE,iBAAQa,QAAR,CAAkBtB,QAAlB,CAA4BC,OAA5B,CAAqCQ,SAArC,CAAgD,CAC9C,GAAG,CAACa,QAAQ,CAACZ,IAAb,CAAmB,CACjBC,OAAO,CAACC,KAAR,CAAc,kGAAd,EACA,OACD,CACD,GAAG,CAACU,QAAQ,CAACC,IAAb,CAAmB,CACjBZ,OAAO,CAACC,KAAR,CAAc,kGAAd,EACA,OACD,CAED,GAAME,CAAAA,GAAG,WAAM,KAAKvB,QAAX,UAAT,CACA,GAAMwB,CAAAA,GAAG,CAAG,KAAKvB,QAAjB,CACAuB,GAAG,CAAC,cAAD,CAAH,CAAsB,kBAAtB,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,MADG,CAEX3B,OAAO,CAAEyB,GAFE,CAGXG,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeE,QAAf,CAHK,CAAb,CAMA,MAAOpB,CAAAA,KAAK,CAACY,GAAD,CAAME,IAAN,CAAL,CACJb,IADI,CACC,KAAKC,cADN,EAEJD,IAFI,CAEC,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CAJI,EAKJC,KALI,CAKE,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CAPI,EAQJc,OARI,CAQIZ,SARJ,CAAP,CASD,CAED;AACF;AACA;AACA;AACA;AACA;AACA,K,0BACE,oBAAWe,MAAX,CAAmBxB,QAAnB,CAA6BC,OAA7B,CAAsCQ,SAAtC,CAAiD,CAC/C,GAAG,CAACe,MAAJ,CAAY,CACVb,OAAO,CAACC,KAAR,CAAc,mFAAd,EACA,OACD,CACD,GAAME,CAAAA,GAAG,WAAM,KAAKvB,QAAX,mBAA6BiC,MAA7B,CAAT,CACA,GAAMT,CAAAA,GAAG,CAAG,KAAKvB,QAAjB,CACAuB,GAAG,CAAC,cAAD,CAAH,CAAsB,kBAAtB,CACA,GAAMC,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,QADG,CAEX3B,OAAO,CAAEyB,GAFE,CAAb,CAKA,MAAOb,CAAAA,KAAK,CAACY,GAAD,CAAME,IAAN,CAAL,CACJb,IADI,CACC,KAAKC,cADN,EAEJD,IAFI,CAEC,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CAJI,EAKJC,KALI,CAKE,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CAPI,EAQJc,OARI,CAQIZ,SARJ,CAAP,CASD,CAED;AACF;AACA;AACA;AACA;AACA,K,0BACE,oBAAWe,MAAX,CAAmBC,IAAnB,CAAyBzB,QAAzB,CAAmCC,OAAnC,CAA2C,CACzC,GAAG,CAACuB,MAAJ,CAAY,CACVb,OAAO,CAACC,KAAR,CAAc,mFAAd,EACA,OACD,CAED,GAAME,CAAAA,GAAG,WAAM,KAAKvB,QAAX,yBAAmCiC,MAAnC,CAAT,CACA,GAAMR,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAGQ,IAAI,CAAG,KAAH,CAAW,QADb,CAEXnC,OAAO,CAAE,KAAKE,QAFH,CAAb,CAKA,MAAOU,CAAAA,KAAK,CAACY,GAAD,CAAME,IAAN,CAAL,CACJb,IADI,CACC,KAAKC,cADN,EAEJD,IAFI,CAEC,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CAJI,EAKJC,KALI,CAKE,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CAPI,CAAP,CAQD,CAED;AACF;AACA;AACA;AACA;AACA;AACA,K,2BACE,qBAAYmB,UAAZ,CAAwB1B,QAAxB,CAAkCC,OAAlC,CAA2CQ,SAA3C,CAAsD,CACpD,GAAG,CAACiB,UAAJ,CAAgB,CACdf,OAAO,CAACC,KAAR,CAAc,wFAAd,EACA,OACD,CAED,GAAME,CAAAA,GAAG,WAAM,KAAKvB,QAAX,oBAAT,CACA,GAAMwB,CAAAA,GAAG,CAAG,KAAKvB,QAAjB,CACAuB,GAAG,CAAC,cAAD,CAAH,CAAsB,kBAAtB,CACA,GAAMC,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,OADG,CAEX3B,OAAO,CAAEyB,GAFE,CAGXG,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBO,MAAM,CAAED,UADW,CAAf,CAHK,CAAb,CAQA,MAAOxB,CAAAA,KAAK,CAACY,GAAD,CAAME,IAAN,CAAL,CACNb,IADM,CACD,KAAKC,cADJ,EAEND,IAFM,CAED,SAACE,MAAD,CAAY,CAChBL,QAAQ,CAACK,MAAD,CAAR,CACD,CAJM,EAKNC,KALM,CAKA,SAACC,GAAD,CAAS,CACdN,OAAO,CAACM,GAAD,CAAP,CACD,CAPM,EAQNc,OARM,CAQEZ,SARF,CAAP,CASD,C,mBAIH,GAAMmB,CAAAA,GAAG,CAAG,GAAIxC,CAAAA,GAAJ,CAAQ,CAClBC,OAAO,CAAE,6CADS,CAElBC,OAAO,CAAE,CACPuC,aAAa,CAAE,sCADR,CAEP,eAAgB,kBAFT,CAFS,CAAR,CAAZ,CAQA,cAAeD,CAAAA,GAAf","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  // Возврат ответа об ошибке от сервера\n  _checkResponse(res) {\n    if (res.ok) {\n      // Метод .json принимает предоставленный JSON, строит его и отправляет его клиенту\n      return res.json();\n    }\n    // Promise  позволяет создать обертку для значения, который еще не известен при создании промиса. Нужен дял асинхронных операций\n    return Promise.reject(`Ошибка: ${res.statusText}, с кодом: ${res.status}`);\n  }\n\n  /**\n   * Метод получения информации о пользователе с сервера \n   * @param {Function} callback Функция обработки успешного ответа от сервера, получает информацию о пользователе  \n   * @param {Function} errback Функция обработки ошибки от сервера\n   */\n  getUserInfo(callback, errback) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .then((result) => {\n        callback(result);\n      })\n      .catch((err) => {\n        errback(err);\n      });\n  }\n\n  /**\n   * Метод получения карточек с сервера \n   * @param {Function} callback принимает идентификатор пользователя и результат принятия \n   * @param {Function} errback \n   */\n  getCards(callback, errback) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .then((result) => {\n        callback(result);\n      })\n      .catch((err) => {\n        errback(err);\n      });\n  }\n\n  /**\n   * Метод редактирования профиля пользователя\n   * @param {Object} userData Данные о пользователе\n   * userData.name {String} \n   * userData.about {String}\n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */\n  editProfile(userData, callback, errback, finalback) {\n    if (!userData.name) {\n      console.error(\"Api.editProfile в аргументе userData не передано обязательное поле 'name'. Запрос не будет выполнен.\");\n      return;\n    }\n    if (!userData.about) {\n      console.error(\"Api.editProfile в аргументе userData не передано обязательное поле 'about'. Запрос не будет выполнен.\");\n      return;\n    }\n    const url = `${this._baseUrl}/users/me`;\n    const hdr = this._headers;\n    hdr['Content-Type'] = 'application/json';\n\n    const opts = {\n      method: 'PATCH',\n      headers: hdr,\n      body: JSON.stringify(userData)\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n      .then((result) => {\n        callback(result);\n      })\n      .catch((err) => {\n        errback(err);\n      })\n      .finally(finalback);\n  }\n\n  /**\n   * Метод загрузки новой карточки на сервер\n   * @param {Object} cardData Данные о карточке\n   * cardData.name {String}\n   * cardData.link {String}\n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */\n  addCard(cardData, callback, errback, finalback) {\n    if(!cardData.name) {\n      console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'name'. Запрос не будет выполнен.\");\n      return;\n    }\n    if(!cardData.link) {\n      console.error(\"Api.addCard в аргументе cardData не передано обязательное поле 'link'. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/cards`;\n    const hdr = this._headers;\n    hdr['Content-Type'] = 'application/json';\n\n    const opts = {\n      method: 'POST',\n      headers: hdr,\n      body: JSON.stringify(cardData)\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n      .then((result) => {\n        callback(result);\n      })\n      .catch((err) => {\n        errback(err);\n      })\n      .finally(finalback);\n  }\n\n  /**\n   * Метод удаления карточки \n   * @param {String} cardId Индентификатор карточки \n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */\n  deleteCard(cardId, callback, errback, finalback) {\n    if(!cardId) {\n      console.error(\"Api.deleteCard не передан обязательный аргумент cardId. Запрос не будет выполнен.\");\n      return;\n    }\n    const url = `${this._baseUrl}/cards/${cardId}`;\n    const hdr = this._headers;\n    hdr['Content-Type'] = 'application/json';\n    const opts = {\n      method: 'DELETE',\n      headers: hdr\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n      .then((result) => {\n        callback(result);\n      })\n      .catch((err) => {\n        errback(err);\n      })\n      .finally(finalback);\n  }\n\n  /**\n   * Метод постановки/удаления лайка на карточку\n   * @param {String} cardId Идентификатор карточки \n   * @param {Function} callback \n   * @param {Function} errback \n   */\n  changeLike(cardId, like, callback, errback){\n    if(!cardId) {\n      console.error(\"Api.changeLike не передан обязательный аргумент cardId. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/cards/likes/${cardId}`;\n    const opts = {\n      method: (like ? 'PUT' : 'DELETE'),\n      headers: this._headers\n    };\n\n    return fetch(url, opts)\n      .then(this._checkResponse)\n      .then((result) => {\n        callback(result);\n      })\n      .catch((err) => {\n        errback(err);\n      });\n  }\n\n  /**\n   * Метод обновления аватара\n   * @param {String} avatarLink \n   * @param {Function} callback \n   * @param {Function} errback \n   * @param {Function} finalback\n   */\n  renewAvatar(avatarLink, callback, errback, finalback) {\n    if(!avatarLink) {\n      console.error(\"Api.renewAvatar не передан обязательный аргумент avatarLink. Запрос не будет выполнен.\");\n      return;\n    }\n\n    const url = `${this._baseUrl}/users/me/avatar`;\n    const hdr = this._headers;\n    hdr['Content-Type'] = 'application/json';\n    const opts = {\n      method: 'PATCH',\n      headers: hdr,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    };\n\n    return fetch(url, opts)\n    .then(this._checkResponse)\n    .then((result) => {\n      callback(result);\n    })\n    .catch((err) => {\n      errback(err);\n    })\n    .finally(finalback);\n  }\n}\n\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-30\",\n  headers: {\n    authorization: \"08bc75e7-78fb-46ea-8791-989ceb63ff7a\",\n    'Content-Type': 'application/json'\n  },\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}