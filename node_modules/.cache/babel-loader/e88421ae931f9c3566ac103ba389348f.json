{"ast":null,"code":"import _toConsumableArray from\"/Users/Stasya/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/Stasya/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import Header from'./Header.js';import Main from'./Main.js';import Footer from'./Footer.js';import ImagePopup from'./ImagePopup.js';import api from'../utils/Api';import CurrentUserContext from'../contexts/CurrentUserContext';import EditAvatarPopup from'./EditAvatarPopup.js';import AddPlacePopup from'./AddPlacePopup.js';import DeleteCardPopup from'./DeleteCardPopup.js';import EditProfilePopup from'./EditProfilePopup.js';//---------------------------------------------------------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Создаем хуки, управляющие внутренним состоянием.\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isEditAvatarPopupOpen=_React$useState2[0],onEditAvatarPopupOpen=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isEditProfilePopupOpen=_React$useState4[0],onEditProfilePopupOpen=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isAddPlacePopupOpen=_React$useState6[0],onAddPlacePopupOpen=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),isDeleteCardPopup=_React$useState8[0],onDeleteCardPopup=_React$useState8[1];var _React$useState9=React.useState({link:'',name:''}),_React$useState10=_slicedToArray(_React$useState9,2),selectedCard=_React$useState10[0],setSelectedCard=_React$useState10[1];var _React$useState11=React.useState({}),_React$useState12=_slicedToArray(_React$useState11,2),currentUser=_React$useState12[0],setCurrentUser=_React$useState12[1];var _React$useState13=React.useState([]),_React$useState14=_slicedToArray(_React$useState13,2),cards=_React$useState14[0],setCards=_React$useState14[1];var _React$useState15=React.useState({}),_React$useState16=_slicedToArray(_React$useState15,2),cardDelete=_React$useState16[0],setCardDelete=_React$useState16[1];var _React$useState17=React.useState('Сохранить'),_React$useState18=_slicedToArray(_React$useState17,2),profilePopupButtonText=_React$useState18[0],setProfilePopupButtonText=_React$useState18[1];var _React$useState19=React.useState('Сохранить'),_React$useState20=_slicedToArray(_React$useState19,2),avatarPopupButtonText=_React$useState20[0],setAvatarPopupButtonText=_React$useState20[1];var _React$useState21=React.useState('Создать'),_React$useState22=_slicedToArray(_React$useState21,2),placePopupButtonText=_React$useState22[0],setPlacePopupButtonText=_React$useState22[1];var _React$useState23=React.useState('Да'),_React$useState24=_slicedToArray(_React$useState23,2),removePopupButtonText=_React$useState24[0],setRemovePopupButtonText=_React$useState24[1];//---------------------------------------------------------------------------------------------------------------------\n//Создание обработчика события, который изменяет внутренне состояние \nfunction handleEditAvatarClick(){onEditAvatarPopupOpen(true);};function handleEditProfileClick(){onEditProfilePopupOpen(true);};function handleAddPlaceClick(){onAddPlacePopupOpen(true);};function handleCardClick(card){setSelectedCard(card);};function handleCardDeleteClick(card){onDeleteCardPopup(true);setCardDelete(card);};//Функция закрытия всех попапов\nfunction closeAllPopups(){onEditAvatarPopupOpen(false);onEditProfilePopupOpen(false);onAddPlacePopupOpen(false);onDeleteCardPopup(false);setCardDelete({link:'',name:''});setSelectedCard({link:'',name:''});};//---------------------------------------------------------------------------------------------------------------------\n// Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n// Функция, которая отвечает за закрытие попапов по клику вне формы\nReact.useEffect(function(){function handleOverlayClick(evt){if(evt.target.classList.contains('popup')){closeAllPopups();}}document.addEventListener('mousedown',handleOverlayClick);return function(){document.removeEventListener('mousedown',handleOverlayClick);};},// колбэк-очистка\n[]);// Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\nReact.useEffect(function(){function handleEscapeClick(evt){if(evt.key===\"Escape\"){closeAllPopups();}}document.addEventListener('keyup',handleEscapeClick);return function(){document.removeEventListener('keyup',handleEscapeClick);};},[]);// Чтение данных с сервера (информация о пользователе + информация о карточках)\nReact.useEffect(function(){api.getUserInfo(// Функция колбэк получает информацию о пользователе в виде объекта\n// Объект содержит свойства: name, about, avatar, _id.\nfunction(user){//console.log(user);\nsetCurrentUser(user);// После получения идентификатора пользователя получим карточки \napi.getCards(// После получения карточек - нарисуем их\nfunction(cards){//console.log(cards);\nsetCards(cards);},function(err){console.log(\"В ходе получения карточек возникла ошибка.\");console.log(err);});},function(err){console.log(\"В ходе получения информации о пользователе возникла ошибка.\");console.log(err);});},[]);//---------------------------------------------------------------------------------------------------------------------\n// Установка лайка карточкам\nfunction handleCardLike(card){// Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\nvar isLiked=card.likes.some(function(like){return like._id===currentUser._id;});api.changeLike(card._id,!isLiked,function(res){// console.log(\"Результат выполнения changeLike\");\nconsole.log(res);setCards(function(condition){return condition.map(function(currentCard){return currentCard._id===card._id?res:currentCard;});});},function(err){console.log(\"Ошибка в результате выполнения changeLike\");console.log(err);});};//  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\nfunction handleCardDelete(card){setRemovePopupButtonText('Удаление...');// Исключаем из массива удаленную карточку\nvar newCards=cards.filter(function(currentCard){return currentCard._id!==card._id;});api.deleteCard(card._id,function(res){// console.log(\"Результат выполнения deleteCard\");\nconsole.log(res);// Обновляем состояние \nsetCards(newCards);closeAllPopups();},function(err){console.log(\"Ошибка в результате выполнения deleteCard\");console.log(err);},function(){setRemovePopupButtonText('Да');});};// Функция обновления пользователя \nfunction handleUpdateUser(user){setProfilePopupButtonText('Сохранение...');api.editProfile(user,function(res){// console.log(\"Результат выполнения editProfile\");\nconsole.log(res);setCurrentUser(res);closeAllPopups();},function(err){console.log(\"Ошибка в результате выполнения editProfile\");console.log(err);},function(){setProfilePopupButtonText('Сохранить');});};// Функция обновления аватара\nfunction handleUpdateAvatar(avatar){setAvatarPopupButtonText('Сохранение...');api.renewAvatar(avatar,// 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\nfunction(res){// 2й аргумент с типом Function (callback)\n// console.log(\"Результат выполнения renewAvatar\");\nconsole.log(res);setCurrentUser(res);closeAllPopups();},function(err){// 3й аргумент с типом Function (errback)\nconsole.log(\"Ошибка в результате выполнения renewAvatar\");console.log(err);},function(){// 4й аргумент с типом Function (finalback)\nsetAvatarPopupButtonText('Сохранить');});};// Функция добавления места \nfunction handleAddPlaceSubmit(cardNew){setPlacePopupButtonText('Добавление...');api.addCard(cardNew,function(res){// console.log(\"Результат выполнения addCard\");\nconsole.log(res);setCards([res].concat(_toConsumableArray(cards)));closeAllPopups();},function(err){console.log(\"Ошибка в результате выполнения addCard\");console.log(err);},function(){setPlacePopupButtonText('Создать');});};//---------------------------------------------------------------------------------------------------------------------\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsxs(CurrentUserContext.Provider,{value:currentUser,children:[\" \",/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Main,{onEditAvatar:handleEditAvatarClick,onEditProfile:handleEditProfileClick,onAddPlace:handleAddPlaceClick,onCardClick:handleCardClick,onCardLike:handleCardLike,onCardDelete:handleCardDeleteClick,cards:cards}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser,buttonSubmitText:profilePopupButtonText}),/*#__PURE__*/_jsx(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,buttonSubmitText:placePopupButtonText,onAddPlace:handleAddPlaceSubmit}),/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar,buttonSubmitText:avatarPopupButtonText}),/*#__PURE__*/_jsx(DeleteCardPopup,{isOpen:isDeleteCardPopup,onClose:closeAllPopups,onSubmitDeleteCard:handleCardDelete,card:cardDelete,buttonSubmitText:removePopupButtonText}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups})]})});}export default App;","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","EditProfilePopup","App","useState","isEditAvatarPopupOpen","onEditAvatarPopupOpen","isEditProfilePopupOpen","onEditProfilePopupOpen","isAddPlacePopupOpen","onAddPlacePopupOpen","isDeleteCardPopup","onDeleteCardPopup","link","name","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","cardDelete","setCardDelete","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleCardDeleteClick","closeAllPopups","useEffect","handleOverlayClick","evt","target","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","getUserInfo","user","getCards","err","console","log","handleCardLike","isLiked","likes","some","like","_id","changeLike","res","condition","map","currentCard","handleCardDelete","newCards","filter","deleteCard","handleUpdateUser","editProfile","handleUpdateAvatar","avatar","renewAvatar","handleAddPlaceSubmit","cardNew","addCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js'\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction App() {\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({link: '', name: ''});\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да');\n\n  //---------------------------------------------------------------------------------------------------------------------\n\n  //Создание обработчика события, который изменяет внутренне состояние \n  function handleEditAvatarClick() {\n    onEditAvatarPopupOpen(true);\n  };\n\n  function handleEditProfileClick() {\n    onEditProfilePopupOpen(true);\n  };\n\n  function handleAddPlaceClick() {\n    onAddPlacePopupOpen(true);\n  };\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n\n  function handleCardDeleteClick(card) {\n    onDeleteCardPopup(true);\n    setCardDelete(card);\n  };\n\n  //Функция закрытия всех попапов\n  function closeAllPopups() {\n    onEditAvatarPopupOpen(false);\n    onEditProfilePopupOpen(false);\n    onAddPlacePopupOpen(false);\n    onDeleteCardPopup(false);\n    setCardDelete({link: '',  name: ''});\n    setSelectedCard({link: '',  name: ''});\n  };\n\n//---------------------------------------------------------------------------------------------------------------------\n\n// Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n// Функция, которая отвечает за закрытие попапов по клику вне формы\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains('popup')) {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('mousedown', handleOverlayClick);\n\n    return() => {\n      document.removeEventListener('mousedown', handleOverlayClick);\n    }\n  }, \n  // колбэк-очистка\n  []);\n\n  // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keyup', handleEscapeClick);\n\n    return () => {\n      document.removeEventListener('keyup', handleEscapeClick);\n    }\n  }, []);\n\n\n  // Чтение данных с сервера (информация о пользователе + информация о карточках)\n  React.useEffect(() => {\n    api.getUserInfo(\n      // Функция колбэк получает информацию о пользователе в виде объекта\n      // Объект содержит свойства: name, about, avatar, _id.\n      (user) => {\n        //console.log(user);\n        setCurrentUser(user);\n        // После получения идентификатора пользователя получим карточки \n        api.getCards( \n          // После получения карточек - нарисуем их\n          (cards) => {\n            //console.log(cards);\n            setCards(cards)\n          },\n          (err) => {\n            console.log(\"В ходе получения карточек возникла ошибка.\");\n            console.log(err);\n          }\n        );\n      },\n      (err) => {\n        console.log(\"В ходе получения информации о пользователе возникла ошибка.\");\n        console.log(err);\n      }\n    );\n  }, []);\n\n  //---------------------------------------------------------------------------------------------------------------------\n  // Установка лайка карточкам\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    api.changeLike(card._id, !isLiked, \n      (res) => {\n        // console.log(\"Результат выполнения changeLike\");\n        console.log(res);\n        setCards((condition) => condition.map((currentCard) => currentCard._id === card._id ? res : currentCard));\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения changeLike\");\n        console.log(err);\n      })\n  };\n\n  //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n  function handleCardDelete(card) {\n    setRemovePopupButtonText('Удаление...')\n    // Исключаем из массива удаленную карточку\n    const newCards = cards.filter((currentCard) => currentCard._id !== card._id);\n    api.deleteCard(card._id, \n      (res) => {\n        // console.log(\"Результат выполнения deleteCard\");\n        console.log(res);\n        // Обновляем состояние \n        setCards(newCards);\n        closeAllPopups();\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения deleteCard\");\n        console.log(err);\n      },\n      () => {\n        setRemovePopupButtonText('Да');\n      }\n    );\n  };\n\n  // Функция обновления пользователя \n  function handleUpdateUser(user) {\n    setProfilePopupButtonText('Сохранение...');\n    api.editProfile(user, \n      (res) => {\n        // console.log(\"Результат выполнения editProfile\");\n        console.log(res);\n        setCurrentUser(res);\n        closeAllPopups();\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения editProfile\");\n        console.log(err);\n      },\n      () => {\n        setProfilePopupButtonText('Сохранить');\n      });\n  };\n\n  // Функция обновления аватара\n  function handleUpdateAvatar(avatar) {\n    setAvatarPopupButtonText('Сохранение...');\n    api.renewAvatar(avatar, // 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n      (res) => {            // 2й аргумент с типом Function (callback)\n        // console.log(\"Результат выполнения renewAvatar\");\n        console.log(res);\n        setCurrentUser(res);\n        closeAllPopups();\n      },\n      (err) => {            // 3й аргумент с типом Function (errback)\n        console.log(\"Ошибка в результате выполнения renewAvatar\");\n        console.log(err);\n      },\n      () => {               // 4й аргумент с типом Function (finalback)\n        setAvatarPopupButtonText('Сохранить');\n      }\n    );\n  };\n\n  // Функция добавления места \n  function handleAddPlaceSubmit(cardNew) {\n    setPlacePopupButtonText('Добавление...');\n    api.addCard(cardNew, \n      (res) => {\n        // console.log(\"Результат выполнения addCard\");\n        console.log(res);\n        setCards([res, ...cards]);\n        closeAllPopups();\n      },\n      (err) => {\n        console.log(\"Ошибка в результате выполнения addCard\");\n        console.log(err);\n      },\n      () => {\n        setPlacePopupButtonText('Создать');\n      }\n    );\n  };\n\n  //---------------------------------------------------------------------------------------------------------------------\n  return(\n    <div className=\"page\">\n    <CurrentUserContext.Provider value={currentUser}> {/*текущее значение контекста из ближайшего подходящего Provider выше в дереве компонентов.*/}\n\n    <Header/>\n\n    <Main\n      onEditAvatar={handleEditAvatarClick}\n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onCardClick={handleCardClick}\n      onCardLike={handleCardLike}\n      onCardDelete={handleCardDeleteClick}\n      cards={cards}\n    />\n\n    <Footer/>\n\n    <EditProfilePopup\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      onUpdateUser={handleUpdateUser}\n      buttonSubmitText={profilePopupButtonText}\n    />\n    \n    <AddPlacePopup\n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      buttonSubmitText={placePopupButtonText}\n      onAddPlace={handleAddPlaceSubmit}\n    />\n\n    <EditAvatarPopup\n      isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}\n      onUpdateAvatar={handleUpdateAvatar}\n      buttonSubmitText={avatarPopupButtonText}\n    />\n\n    <DeleteCardPopup \n      isOpen={isDeleteCardPopup}\n      onClose={closeAllPopups}\n      onSubmitDeleteCard={handleCardDelete}\n      card={cardDelete}\n      buttonSubmitText={removePopupButtonText}\n    />\n\n    <ImagePopup\n      card={selectedCard}\n      onClose={closeAllPopups}\n    />\n\n    </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}