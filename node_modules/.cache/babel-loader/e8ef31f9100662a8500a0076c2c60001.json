{"ast":null,"code":"var _jsxFileName = \"/Users/Stasya/Desktop/alpha-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/Api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport DeleteCardPopup from \"./DeleteCardPopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\"; //---------------------------------------------------------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Создаем хуки, управляющие внутренним состоянием.\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isDeleteCardPopup, setIsDeleteCardPopup] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: \"\",\n    name: \"\"\n  });\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [cardDelete, setCardDelete] = React.useState({});\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState(\"Сохранить\");\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState(\"Сохранить\");\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState(\"Создать\");\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState(\"Да\"); //---------------------------------------------------------------------------------------------------------------------\n  //Создание обработчика события, который изменяет внутренне состояние\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardDeleteClick(card) {\n    setIsDeleteCardPopup(true);\n    setCardDelete(card);\n  } //Функция закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopup(false);\n    setCardDelete({\n      link: \"\",\n      name: \"\"\n    });\n    setSelectedCard({\n      link: \"\",\n      name: \"\"\n    });\n  } //---------------------------------------------------------------------------------------------------------------------\n  // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n  // Функция, которая отвечает за закрытие попапов по клику вне формы\n\n\n  React.useEffect(() => {\n    function handleOverlayClick(evt) {\n      if (evt.target.classList.contains(\"popup\")) {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleOverlayClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOverlayClick);\n    };\n  }, // колбэк-очистка\n  []); // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n\n  React.useEffect(() => {\n    function handleEscapeClick(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener(\"keyup\", handleEscapeClick);\n    return () => {\n      document.removeEventListener(\"keyup\", handleEscapeClick);\n    };\n  }, []); // Чтение данных с сервера (информация о пользователе)\n\n  React.useEffect(() => {\n    api.getUserInfo().then(user => {\n      //console.log(user);\n      setCurrentUser(user);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    // После получения идентификатора пользователя получим карточки\n    api.getCards() // После получения карточек - нарисуем их\n    .then(cards => {\n      //console.log(cards);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //---------------------------------------------------------------------------------------------------------------------\n  // Установка лайка карточкам\n\n  function handleCardLike(card) {\n    // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    api.changeLike(card._id, !isLiked).then(res => {\n      setCards(condition => condition.map(currentCard => currentCard._id === card._id ? res : currentCard));\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n\n\n  function handleCardDelete(card) {\n    setRemovePopupButtonText(\"Удаление...\"); // Исключаем из массива удаленную карточку\n\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(currentCard => currentCard._id !== card._id); // Обновляем состояние\n\n      setCards(newCards);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setRemovePopupButtonText(\"Да\");\n    });\n  } // Функция обновления пользователя\n\n\n  function handleUpdateUser(user) {\n    setProfilePopupButtonText(\"Сохранение...\");\n    api.editProfile(user).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setProfilePopupButtonText(\"Сохранить\");\n    });\n  } // Функция обновления аватара\n\n\n  function handleUpdateAvatar(avatar) {\n    setAvatarPopupButtonText(\"Сохранение...\");\n    api.renewAvatar(avatar) // 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n    .then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setAvatarPopupButtonText(\"Сохранить\");\n    });\n  } // Функция добавления места\n\n\n  function handleAddPlaceSubmit(cardNew) {\n    setPlacePopupButtonText(\"Добавление...\");\n    api.addCard(cardNew).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setPlacePopupButtonText(\"Создать\");\n    });\n  } //---------------------------------------------------------------------------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDeleteClick,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        buttonSubmitText: profilePopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        buttonSubmitText: placePopupButtonText,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        buttonSubmitText: avatarPopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeleteCardPopup,\n        onClose: closeAllPopups,\n        onSubmitDeleteCard: handleCardDelete,\n        card: cardDelete,\n        buttonSubmitText: removePopupButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"j4GxAb39Nc9zeeYnzT0QWUMRRJ4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Stasya/Desktop/alpha-project/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","EditProfilePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeleteCardPopup","setIsDeleteCardPopup","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","cards","setCards","cardDelete","setCardDelete","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleCardDeleteClick","closeAllPopups","useEffect","handleOverlayClick","evt","target","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","getUserInfo","then","user","catch","err","console","log","getCards","handleCardLike","isLiked","likes","some","like","_id","changeLike","res","condition","map","currentCard","handleCardDelete","deleteCard","newCards","filter","finally","handleUpdateUser","editProfile","handleUpdateAvatar","avatar","renewAvatar","handleAddPlaceSubmit","cardNew","addCard"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/Api\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport DeleteCardPopup from \"./DeleteCardPopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\n\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction App() {\n    //Создаем хуки, управляющие внутренним состоянием.\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n        React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n        React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isDeleteCardPopup, setIsDeleteCardPopup] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({\n        link: \"\",\n        name: \"\",\n    });\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n    const [cardDelete, setCardDelete] = React.useState({});\n\n    const [profilePopupButtonText, setProfilePopupButtonText] =\n        React.useState(\"Сохранить\");\n    const [avatarPopupButtonText, setAvatarPopupButtonText] =\n        React.useState(\"Сохранить\");\n    const [placePopupButtonText, setPlacePopupButtonText] =\n        React.useState(\"Создать\");\n    const [removePopupButtonText, setRemovePopupButtonText] =\n        React.useState(\"Да\");\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    //Создание обработчика события, который изменяет внутренне состояние\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleCardDeleteClick(card) {\n        setIsDeleteCardPopup(true);\n        setCardDelete(card);\n    }\n\n    //Функция закрытия всех попапов\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsDeleteCardPopup(false);\n        setCardDelete({ link: \"\", name: \"\" });\n        setSelectedCard({ link: \"\", name: \"\" });\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n    // Функция, которая отвечает за закрытие попапов по клику вне формы\n    React.useEffect(\n        () => {\n            function handleOverlayClick(evt) {\n                if (evt.target.classList.contains(\"popup\")) {\n                    closeAllPopups();\n                }\n            }\n            document.addEventListener(\"mousedown\", handleOverlayClick);\n\n            return () => {\n                document.removeEventListener(\"mousedown\", handleOverlayClick);\n            };\n        },\n        // колбэк-очистка\n        []\n    );\n\n    // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n    React.useEffect(() => {\n        function handleEscapeClick(evt) {\n            if (evt.key === \"Escape\") {\n                closeAllPopups();\n            }\n        }\n        document.addEventListener(\"keyup\", handleEscapeClick);\n\n        return () => {\n            document.removeEventListener(\"keyup\", handleEscapeClick);\n        };\n    }, []);\n\n    // Чтение данных с сервера (информация о пользователе)\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((user) => {\n                //console.log(user);\n                setCurrentUser(user);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    React.useEffect(() => {\n        // После получения идентификатора пользователя получим карточки\n        api.getCards()\n            // После получения карточек - нарисуем их\n            .then((cards) => {\n                //console.log(cards);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    //---------------------------------------------------------------------------------------------------------------------\n    // Установка лайка карточкам\n    function handleCardLike(card) {\n        // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n        const isLiked = card.likes.some((like) => like._id === currentUser._id);\n        api.changeLike(card._id, !isLiked)\n            .then((res) => {\n                setCards((condition) =>\n                    condition.map((currentCard) =>\n                        currentCard._id === card._id ? res : currentCard\n                    )\n                );\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n    function handleCardDelete(card) {\n        setRemovePopupButtonText(\"Удаление...\");\n        // Исключаем из массива удаленную карточку\n \n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter(\n                    (currentCard) => currentCard._id !== card._id\n                );\n                // Обновляем состояние\n                setCards(newCards);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setRemovePopupButtonText(\"Да\");\n            })\n    }\n\n    // Функция обновления пользователя\n    function handleUpdateUser(user) {\n        setProfilePopupButtonText(\"Сохранение...\");\n        api.editProfile(user)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setProfilePopupButtonText(\"Сохранить\");\n            })\n    }\n\n    // Функция обновления аватара\n    function handleUpdateAvatar(avatar) {\n        setAvatarPopupButtonText(\"Сохранение...\");\n        api.renewAvatar(avatar) // 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n            .then((avatar) => {\n                setCurrentUser(avatar);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setAvatarPopupButtonText(\"Сохранить\");\n            }\n        );\n    }\n\n    // Функция добавления места\n    function handleAddPlaceSubmit(cardNew) {\n        setPlacePopupButtonText(\"Добавление...\");\n        api.addCard(cardNew)\n            .then((res) => {\n                setCards([res, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setPlacePopupButtonText(\"Создать\");\n            })\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                {\" \"}\n                {/*текущее значение контекста из ближайшего подходящего Provider выше в дереве компонентов.*/}\n                <Header />\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDeleteClick}\n                    cards={cards}\n                />\n                <Footer />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    buttonSubmitText={profilePopupButtonText}\n                />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    buttonSubmitText={placePopupButtonText}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    buttonSubmitText={avatarPopupButtonText}\n                />\n                <DeleteCardPopup\n                    isOpen={isDeleteCardPopup}\n                    onClose={closeAllPopups}\n                    onSubmitDeleteCard={handleCardDelete}\n                    card={cardDelete}\n                    buttonSubmitText={removePopupButtonText}\n                />\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}